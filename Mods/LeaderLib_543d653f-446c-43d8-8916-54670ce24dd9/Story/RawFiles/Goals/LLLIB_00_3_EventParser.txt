Version 1
SubGoalCombiner SGC_AND
INITSECTION
//DB_LeaderLib_SendEvent(_EventName)
//DB_LLLIB_EventParser_Spawned(_EventParser)
KBSECTION
//REGION CREATE_NEW
PROC
LLLIB_EventParser_CreateNew()
AND
DB_LLLIB_EventParser_Spawned(_EventParser)
AND
ObjectExists(_EventParser, 0)
THEN
NOT DB_LLLIB_EventParser_Spawned(_EventParser);

PROC
LLLIB_EventParser_CreateNew()
AND
NOT CharacterGetHostCharacter(_)
AND
DB_LLLIB_Treasure_GeneratorDummies(_Dummy)
AND
NOT DB_LLLIB_EventParser_Spawned(_)
AND
GetPosition(_Dummy, _x,_y,_z)
AND
CreateItemTemplateAtPosition("LLLIB_Scripting_EventParser_0f686d7d-2304-4f23-bd9a-8d402a6bdefe", _x,_y,_z, _EventParser)
THEN
DB_LLLIB_EventParser_Spawned(_EventParser);

PROC
LLLIB_EventParser_CreateNew()
AND
NOT DB_LLLIB_EventParser_Spawned(_)
AND
CharacterGetHostCharacter(_Host)
AND
GetPosition(_Host, _x,_y,_z)
AND
CreateItemTemplateAtPosition("LLLIB_Scripting_EventParser_0f686d7d-2304-4f23-bd9a-8d402a6bdefe", _x,_y,_z, _EventParser)
THEN
DB_LLLIB_EventParser_Spawned(_EventParser);

PROC
LLLIB_EventParser_CreateNew()
AND
NOT DB_LLLIB_EventParser_Spawned(_) // Creating a temporary event parser failed, use a player
AND
CharacterGetHostCharacter(_Player)
THEN
DB_LLLIB_EventParser_Spawned(_Player);

QRY
LLLIB_QRY_EventParser_CreateNew()
THEN
LLLIB_EventParser_CreateNew();
//END_REGION

//REGION HELPERS
QRY
LLLIB_QRY_EventParser_GlobalParserExists()
AND
ObjectExists(ITEMGUID_S_LLLIB_Scripting_EventParser_6983a226-0d86-47da-a27f-ee3e483625e6, 1)
THEN
DB_NOOP(1);

PROC
LLLIB_EventParser_ClearEvent((STRING)_EventName)
AND
DB_LeaderLib_SendEvent(_EventName)
THEN
NOT DB_LeaderLib_SendEvent(_EventName);

PROC
LLLIB_EventParser_Internal_RunEvent((STRING)_EventName)
AND
LLLIB_QRY_EventParser_GlobalParserExists()
THEN
LLLIB_EventParser_ClearEvent(_EventName);
SetStoryEvent(S_LLLIB_Scripting_EventParser_6983a226-0d86-47da-a27f-ee3e483625e6, _EventName);

PROC
LLLIB_EventParser_Internal_RunEvent((STRING)_EventName)
AND
NOT LLLIB_QRY_EventParser_GlobalParserExists()
AND
LLLIB_QRY_EventParser_CreateNew()
AND
DB_LLLIB_EventParser_Spawned(_EventParser)
THEN
LLLIB_EventParser_ClearEvent(_EventName);
SetStoryEvent(_EventParser, _EventName);
//END_REGION

IF
GameStarted(_,_)
AND
NOT LLLIB_QRY_EventParser_GlobalParserExists()
THEN
LeaderLog_Log("DEBUG", "[LLLIB:EventParser][ERROR] Global Event Parser doesn't exist for some reason.");
//LLLIB_EventParser_CreateNew();

//Send out a general event, using the Event Parser object.
PROC
LeaderLib_SendEvent((STRING)_EventName)
AND
NOT DB_LeaderLib_SendEvent(_EventName)
THEN
DB_LeaderLib_SendEvent(_EventName);

IF
DB_LeaderLib_SendEvent(_EventName)
THEN
LLLIB_EventParser_Internal_RunEvent(_EventName);

//Events that were never sent
IF
DB_LLLIB_EventParser_Spawned(_EventParser)
AND
DB_LeaderLib_SendEvent(_EventName)
THEN
NOT DB_LeaderLib_SendEvent(_EventName);
LLLIB_EventParser_Internal_RunEvent(_EventName);
//REGION UPDATER
PROC
LLLIB_System_RegisterDatabases()
THEN
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "EventParser", "DB_LeaderLib_SendEvent", 1);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "EventParser", "DB_LLLIB_EventParser_Spawned", 1);
LeaderLog_Log("TRACE", "[LLLIB:EventParser] Databases registered.");
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader__LeaderLib"
