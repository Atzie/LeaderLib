Version 1
SubGoalCombiner SGC_AND
INITSECTION
LLLIB_LeaderTrader_InitSettings();
LLLIB_LeaderTrader_RegisterTraderSettings();
//DB_LLLIB_LeaderTrader(_LeaderTrader)
//DB_LLLIB_LeaderTrader_MetPlayer(_Player)

//Settings
//DB_LLLIB_LeaderTrader_Dialog(_ReferenceName, _Dialog)
//DB_LLLIB_LeaderTrader_Appearance(_Level, _Template)
//Dynamic
//DB_LLLIB_LeaderTrader_CurrentAppearance(_Template)
KBSECTION
//REGION INIT
IF
StoryEvent(_, "LLLIB_Events_UpdateDatabases")
THEN
LLLIB_LeaderTrader_InitSettings();

PROC
LLLIB_LeaderTrader_InitSettings()
THEN
LLLIB_Helper_ClearExistingDatabase("DB_LLLIB_LeaderTrader_Dialog", 2);
DB_LLLIB_LeaderTrader_Dialog("Default", "LLLIB_RetiredLeader_Default");
DB_LLLIB_LeaderTrader_Dialog("Tutorial", "LLLIB_RetiredLeader_TutorialBoat");
DB_LLLIB_LeaderTrader_Dialog("Act1_Intro", "LLLIB_RetiredLeader_Act1_Intro");

LLLIB_Helper_ClearExistingDatabase("DB_LLLIB_LeaderTrader_Appearance", 2);
//Naked version
DB_LLLIB_LeaderTrader_Appearance("TUT_Tutorial_A", "LLLIB_RetiredLeader_Default_e4cbf1f4-4eea-457c-93a3-ded05ae3605e");
DB_LLLIB_LeaderTrader_Appearance("LeaderLib_TestLevel", "LLLIB_RetiredLeader_Default_e4cbf1f4-4eea-457c-93a3-ded05ae3605e");
//For other acts
DB_LLLIB_LeaderTrader_Appearance("Default", "LLLIB_RetiredLeader_Act1_da17fca2-fe16-46d9-80b3-08971a8c8d49");
//END_REGION

//REGION REGISTER
PROC
LLLIB_LeaderTrader_RegisterTraderSettings()
THEN
LLLIB_Trader_Register_CreationEvent("LLLIB_LeaderTrader", "LeaderLib_Events_OnLeaderTradeSpawned");

//Backup positions, in case the position objects were destroyed
LLLIB_Trader_Register_Position("LLLIB_LeaderTrader", "TUT_Tutorial_A", 31.19, 4.0, -252.77);
LLLIB_Trader_Register_Position("LLLIB_LeaderTrader", "FJ_FortJoy_Main", 220.01, -16.79, 362.97);
LLLIB_Trader_Register_Position("LLLIB_LeaderTrader", "LV_HoE_Main", 341.49, 7.81, 581.80);
LLLIB_Trader_Register_Position("LLLIB_LeaderTrader", "RC_Main", 746.05, 8.11, -37.73);
LLLIB_Trader_Register_Position("LLLIB_LeaderTrader", "CoS_Main", -19.44, 7.46, 674.49);
LLLIB_Trader_Register_Position("LLLIB_LeaderTrader", "Arx_Main", 426.14, 40.12, 24.94);

LLLIB_Trader_Register_PositionObject("LLLIB_LeaderTrader", "FJ_FortJoy_Main", CHARACTERGUID_S_FTJ_StartingAreaChild_39cbb883-7e80-445c-b5f8-0e42d2283d73);

LLLIB_Trader_Register_Dialog("LLLIB_LeaderTrader", "", "LLLIB_RetiredLeader_Default"); // Default
LLLIB_Trader_Register_Dialog("LLLIB_LeaderTrader", "TUT_Tutorial_A", "LLLIB_RetiredLeader_TutorialBoat");
LLLIB_Trader_Register_Dialog("LLLIB_LeaderTrader", "FJ_FortJoy_Main", "LLLIB_RetiredLeader_Act1_Intro", "LLLIB_LeaderTrader_IntroPending");
//LLLIB_Trader_Register_Dialog("LLLIB_LeaderTrader", "LeaderLib_TestLevel", "LLLIB_RetiredLeader_TutorialBoat");
LLLIB_Trader_Register_Dialog("LLLIB_LeaderTrader", "LeaderLib_TestLevel", "LLLIB_RetiredLeader_Act1_Intro", "LLLIB_LeaderTrader_IntroPending");

LLLIB_Requirements_AddFlagRequirement("LLLIB_LeaderTrader_WindegoHasNotCastSpell", "TUT_LowerDeck_WindegoHasCastSpell", "Global", 0);
LLLIB_Requirements_AddFlagRequirement("LLLIB_LeaderTrader_PartyFoundSeekerCamp", "FTJ_SW_BeenToShelter", "Object", 1);
LLLIB_Requirements_AddFlagRequirement("LLLIB_LeaderTrader_IntroComplete", "LLLIB_LeaderTrader_IntroDone", "Object", 1);
LLLIB_Requirements_AddFlagRequirement("LLLIB_LeaderTrader_IntroPending", "LLLIB_LeaderTrader_IntroDone", "Object", 0);
LLLIB_Requirements_AddRegionRequirement("LLLIB_RegionIsFortJoy", "FJ_FortJoy_Main");
LLLIB_Requirements_AddRegionRequirement("LLLIB_RegionIsDebugLevel", "LeaderLib_TestLevel");

LLLIB_Trader_Register_StartingGold("LLLIB_LeaderTrader", "LeaderLib_TestLevel", 20000);
LLLIB_Trader_Register_StartingGold("LLLIB_LeaderTrader", "TUT_Tutorial_A", 200);
LLLIB_Trader_Register_StartingGold("LLLIB_LeaderTrader", "FJ_FortJoy_Main", 500);
LLLIB_Trader_Register_StartingGold("LLLIB_LeaderTrader", "FJ_FortJoy_Main", 4000, "LLLIB_LeaderTrader_PartyFoundSeekerCamp");
LLLIB_Trader_Register_StartingGold("LLLIB_LeaderTrader", "LV_HoE_Main", 4500);
LLLIB_Trader_Register_StartingGold("LLLIB_LeaderTrader", "RC_Main", 5000);
LLLIB_Trader_Register_StartingGold("LLLIB_LeaderTrader", "CoS_Main", 10000);
LLLIB_Trader_Register_StartingGold("LLLIB_LeaderTrader", "Arx_Main", 13000);

LLLIB_Treasure_Register_TreasureToTrader("LLLIB_LeaderTrader_Misc", "LLLIB_LeaderTrader");
LLLIB_Treasure_Register_TreasureToTrader("LLLIB_LeaderTrader_ModItems", "LLLIB_LeaderTrader");
LLLIB_Treasure_Register_TreasureToTrader("LLLIB_LeaderTrader_ModBooks", "LLLIB_LeaderTrader");
LLLIB_Treasure_AddTreasureItemTemplate("LLLIB_LeaderTrader_ModBooks", "LLLIB_BOOK_ModSettingsMenu_646a1194-3383-47fa-a379-ebefa3d2b108", 1);
LLLIB_Treasure_Register_TreasureTable("LLLIB_LeaderTrader_Misc", "ST_WeaponNormal", "LLLIB_RegionIsFortJoy", 1);
//LLLIB_Treasure_Register_TreasureTable("LLLIB_LeaderTrader_Misc", "TEST_Generation", "LLLIB_RegionIsDebugLevel", 1);
//LLLIB_Treasure_Configure_GenerationType("LLLIB_LeaderTrader_ModBooks", "LLLIB_BOOK_ModSettingsMenu_646a1194-3383-47fa-a379-ebefa3d2b108", "DIALOG_STARTED");
//LLLIB_Treasure_AddTreasureItemTemplate("LLLIB_LeaderTrader_ModBooks", "CON_Potion_Fire_Res_A_e78b642c-0216-4df4-b691-a41ff4747b6a", 8);
//LLLIB_Treasure_AddTreasureItemStat("LLLIB_LeaderTrader_ModBooks", "WPN_Cheat_Sword_1H_RuneSlot2", 1);

LLLIB_LeaderTrader_RegisterDeckSeat("LeaderLib_TestLevel", ITEMGUID_LLLIB_DebugLevel_TraderChair_8468a5fd-00a4-42c2-aa15-1b1a25e46738);
LLLIB_LeaderTrader_RegisterDeckSeat("TUT_Tutorial_A", ITEMGUID_S_TUT_KitchenBench_e628d79a-8f7b-4681-a55f-57f0b42a29db, "LLLIB_LeaderTrader_WindegoHasNotCastSpell");
LLLIB_LeaderTrader_RegisterDeckSeat("LV_HoE_Main", ITEMGUID_FUR_Humans_Citz_Stool_C_005_a2a11ad5-645b-4719-bfd5-be04f32fbb2a);
LLLIB_LeaderTrader_RegisterDeckSeat("RC_Main", ITEMGUID_FUR_Humans_Citz_Stool_C_005_a2a11ad5-645b-4719-bfd5-be04f32fbb2a);
LLLIB_LeaderTrader_RegisterDeckSeat("CoS_Main", ITEMGUID_FUR_Humans_Citz_Stool_C_005_a2a11ad5-645b-4719-bfd5-be04f32fbb2a);
LLLIB_LeaderTrader_RegisterDeckSeat("Arx_Main", ITEMGUID_FUR_Humans_Citz_Stool_C_005_a2a11ad5-645b-4719-bfd5-be04f32fbb2a);

PROC
LLLIB_LeaderTrader_RegisterDeckSeat((STRING)_LevelName, (ITEMGUID)_Seat)
THEN
LLLIB_LeaderTrader_RegisterDeckSeat(_LevelName, _Seat, "");

PROC
LLLIB_LeaderTrader_RegisterDeckSeat((STRING)_LevelName, (ITEMGUID)_Seat, (STRING)_RequirementID)
THEN
LLLIB_Trader_Register_Level("LLLIB_LeaderTrader", _LevelName, _RequirementID);
LLLIB_Trader_Register_PositionObject("LLLIB_LeaderTrader", _LevelName, (GUIDSTRING)_Seat);
LLLIB_Trader_Register_Seat("LLLIB_LeaderTrader", _LevelName, (ITEMGUID)_Seat);

PROC
LLLIB_LeaderTrader_RegisterTrader()
AND
NOT DB_LLLIB_LeaderTrader(_)
AND
ObjectExists(CHARACTERGUID_S_LLLIB_RetiredLeader_61ae5acc-1537-4970-82bb-d408a3334574, 1)
THEN
DB_LLLIB_LeaderTrader((CHARACTERGUID)CHARACTERGUID_S_LLLIB_RetiredLeader_61ae5acc-1537-4970-82bb-d408a3334574);
LLLIB_Trader_Register_GlobalTrader("LLLIB_LeaderTrader", CHARACTERGUID_S_LLLIB_RetiredLeader_61ae5acc-1537-4970-82bb-d408a3334574);

//If the global version doesn't exist for some reason, use the template
PROC
LLLIB_LeaderTrader_RegisterTrader()
AND
NOT DB_LLLIB_LeaderTrader(_)
AND
ObjectExists(CHARACTERGUID_S_LLLIB_RetiredLeader_61ae5acc-1537-4970-82bb-d408a3334574, 0)
THEN
LLLIB_Trader_Register_Trader("LLLIB_LeaderTrader", "LLLIB_RetiredLeader_Default_e4cbf1f4-4eea-457c-93a3-ded05ae3605e", 0);

IF
GameStarted(_,_)
THEN
LLLIB_LeaderTrader_RegisterTrader();
//END_REGION

//REGION DEFAULT_DIALOG_GREETING_CHANGE
IF
DialogStarted(_Dialog, _Instance)
AND
DB_LLLIB_LeaderTrader_Dialog("Default", _Dialog)
AND
DialogGetInvolvedPlayer(_Instance, 1, (CHARACTERGUID)_Player)
THEN
DB_LLLIB_LeaderTrader_Temp_ActiveDialog(_Player, _Instance);
LLLIB_LeaderTrader_AdjustGreeting(_Instance, _Player);

PROC
LLLIB_LeaderTrader_AdjustGreeting((INTEGER)_Instance, (CHARACTERGUID)_Player)
AND
DB_LLLIB_LeaderTrader_MetPlayer(_Player)
AND
DB_LLLIB_DialogVars("LeaderTrader_Greeting", _Var)
THEN
DialogSetVariableStringForInstance(_Instance, _Var, "Welcome back! Looking to trade?");

PROC
LLLIB_LeaderTrader_AdjustGreeting((INTEGER)_Instance, (CHARACTERGUID)_Player)
AND
NOT DB_LLLIB_LeaderTrader_MetPlayer(_Player)
AND
DB_LLLIB_DialogVars("LeaderTrader_Greeting", _Var)
THEN
DialogSetVariableStringForInstance(_Instance, _Var, "Hello! Looking to trade?");

IF
ObjectFlagSet("StartTrade", (CHARACTERGUID)_Player, _Instance)
AND
DB_LLLIB_LeaderTrader_Temp_ActiveDialog(_Player, _Instance)
AND
DB_LLLIB_DialogVars("LeaderTrader_Greeting", _Var)
THEN
DialogSetVariableStringForInstance(_Instance, _Var, "Anything else?");

/*
IF
RequestTrade(_Player, _LeaderTrader)
AND
DB_LLLIB_LeaderTrader(_LeaderTrader)
AND
DB_LLLIB_LeaderTrader_Temp_ActiveDialog(_Player, _Instance)
AND
DB_LLLIB_DialogVars("LeaderTrader_Greeting", _Var)
THEN
DialogSetVariableStringForInstance(_Instance, _Var, "Anything else?");
*/

IF
DialogEnded(_Dialog, _Instance)
AND
DB_LLLIB_LeaderTrader_Temp_ActiveDialog(_Player, _Instance)
THEN
NOT DB_LLLIB_LeaderTrader_Temp_ActiveDialog(_Player, _Instance);
//END_REGION

//REGION MEMORY
IF
ObjectFlagSet("LLLIB_LeaderTrader_IntroDone", (CHARACTERGUID)_Player, _Instance)
THEN
DB_LLLIB_LeaderTrader_MetPlayer(_Player);
//END_REGION

//REGION AVOID_COMBAT
IF
CombatStarted(_CombatID)
AND
DB_LLLIB_LeaderTrader(_LeaderTrader)
AND
CharacterIsInCombat(_LeaderTrader, 1)
AND
CombatGetIDForCharacter(_LeaderTrader, _CombatID)
AND
ObjectGetFlag(_LeaderTrader, "LLLIB_LeaderTrader_Hiding", 0)
THEN
DB_LLLIB_LeaderTrader_AvoidingCombat(_CombatID);
DisplayText(_LeaderTrader, "I'm retired! Leave me be.");
CharacterUseSkill(_LeaderTrader, "Shout_ChameleonSkin", _LeaderTrader, 0, 1, 1);
ObjectSetFlag(_LeaderTrader, "LLLIB_LeaderTrader_Hiding", 0);

IF
CharacterStatusApplied(_LeaderTrader, "INVISIBLE", _)
AND
DB_LLLIB_LeaderTrader(_LeaderTrader)
AND
ObjectGetFlag(_LeaderTrader, "LLLIB_LeaderTrader_Hiding", 1)
THEN
SetOnStage(_LeaderTrader, 0);

IF
CombatEnded(_CombatID)
AND
DB_LLLIB_LeaderTrader_AvoidingCombat(_CombatID)
THEN
TimerLaunch("LLLIB_Timers_LeaderTrader_CombatEnded", 3000);
NOT DB_LLLIB_LeaderTrader_AvoidingCombat(_CombatID);

IF
TimerFinished("LLLIB_Timers_LeaderTrader_CombatEnded")
AND
DB_LLLIB_LeaderTrader(_LeaderTrader)
THEN
SetOnStage(_LeaderTrader, 1);
ObjectClearFlag(_LeaderTrader, "LLLIB_LeaderTrader_Hiding");
ObjectSetFlag(_LeaderTrader, "LLLIB_LeaderTrader_WasHiding", 0);
ApplyStatus(_LeaderTrader, "INVISIBLE", 6.0, 1);

IF
CharacterStatusRemoved(_LeaderTrader, "INVISIBLE", _)
AND
DB_LLLIB_LeaderTrader(_LeaderTrader)
AND
ObjectGetFlag(_LeaderTrader, "LLLIB_LeaderTrader_WasHiding", 1)
THEN
DisplayText(_LeaderTrader, "Hrmph...");
ObjectClearFlag(_LeaderTrader, "LLLIB_LeaderTrader_WasHiding");

IF
ObjectFlagCleared("LLLIB_LeaderTrader_WasHiding", (CHARACTERGUID)_LeaderTrader, _)
AND
DB_LLLIB_LeaderTrader(_LeaderTrader)
AND
DB_LLLIB_Traders_Spawned(_LeaderTrader, _TraderID, _Level)
AND
DB_LLLIB_Traders_Seat(_TraderID, _Level, _Seat, _RequirementID)
THEN
//Reset the chair logic
ClearVarObject(_LeaderTrader, "Seat");
SetVarObject(_LeaderTrader, "Seat", _Seat);
//END_REGION

//REGION ATTACKED
IF
AttackedByObject((CHARACTERGUID)_LeaderTrader, (CHARACTERGUID)_AttackerOwner, _Attacker, _DamageType, _DamageSource)
AND
DB_LLLIB_LeaderTrader(_LeaderTrader)
AND
CharacterIsPlayer(_AttackerOwner, 1)
AND
NOT DB_LLLIB_LeaderTrader_IsRespondingToAttack(_)
THEN
DB_LLLIB_LeaderTrader_IsRespondingToAttack(1);
Proc_StartDialog(1, "LLLIB_RetiredTrader_AttackResponse", _LeaderTrader);

IF
AutomatedDialogEnded("LLLIB_RetiredTrader_AttackResponse", _Instance)
AND
DB_LLLIB_LeaderTrader_IsRespondingToAttack(_Val)
THEN
NOT DB_LLLIB_LeaderTrader_IsRespondingToAttack(_Val);
//END_REGION

//REGION SPAWN_EVENT
IF
StoryEvent((CHARACTERGUID)_Trader, "LeaderLib_Events_OnLeaderTradeSpawned")
AND
DB_CurrentLevel(_Level)
THEN
LLLIB_LeaderTrader_OnSpawned(_Trader, _Level);

IF
StoryEvent((CHARACTERGUID)_Trader, "LeaderLib_Events_OnLeaderTradeSpawned")
AND
DB_CurrentLevel("TUT_Tutorial_A")
THEN
LLLIB_Helper_UnequipWeapons(_Trader);

IF
StoryEvent((CHARACTERGUID)_Trader, "LeaderLib_Events_OnLeaderTradeSpawned")
AND
DB_CurrentLevel("FJ_FortJoy_Main")
THEN
LeaderLog_Log("DEBUG","[LLLIB:LeaderTrader] Walking to position in FortJoy.");
CharacterMoveToPosition(_Trader, 220.01, -16.79, 362.97, 0, "LLLIB_Events_LeaderTraderFinishedMoving");
TimerLaunch("LLLIB_LeaderTrader_MoveFailsafeTimer", 10000);

IF
StoryEvent((CHARACTERGUID)_LeaderTrader, "LLLIB_Events_LeaderTraderFinishedMoving")
THEN
TimerCancel("LLLIB_LeaderTrader_MoveFailsafeTimer");

IF
TimerFinished("LLLIB_LeaderTrader_MoveFailsafeTimer")
AND
DB_LLLIB_LeaderTrader(_LeaderTrader)
AND
GetPosition(_LeaderTrader, _x,_y,_z)
THEN
//Hopefully cancel walking
CharacterMoveToPosition(_LeaderTrader, _x,_y,_z, 0, "");

IF
DB_LLLIB_Traders_Spawned(_LeaderTrader, "LLLIB_LeaderTrader", _Level)
THEN
LLLIB_LeaderTrader_Set(_LeaderTrader);

PROC
LLLIB_LeaderTrader_Set((CHARACTERGUID)_Character)
AND
DB_LLLIB_LeaderTrader(_LeaderTrader)
AND
_Character != _LeaderTrader
AND
ObjectExists(_LeaderTrader, 0)
THEN
NOT DB_LLLIB_LeaderTrader(_LeaderTrader);

PROC
LLLIB_LeaderTrader_Set((CHARACTERGUID)_Character)
AND
NOT DB_LLLIB_LeaderTrader(_)
THEN
DB_LLLIB_LeaderTrader(_Character);
//END_REGION

//REGION APPEARANCE_CHANGING
PROC
LLLIB_LeaderTrader_SetAppearance((CHARACTERGUID)_LeaderTrader, (STRING)_NextTemplate)
AND
DB_LLLIB_LeaderTrader_CurrentAppearance(_Template)
AND
_NextTemplate != _Template
THEN
NOT DB_LLLIB_LeaderTrader_CurrentAppearance(_Template);

PROC
LLLIB_LeaderTrader_SetAppearance((CHARACTERGUID)_LeaderTrader, (STRING)_Template)
AND
NOT DB_LLLIB_LeaderTrader_CurrentAppearance(_Template)
THEN
CharacterTransform(_LeaderTrader, _Template, 1, 1, 1, 1, 1, 1, 0);
DB_LLLIB_LeaderTrader_CurrentAppearance(_Template);

IF
StoryEvent((CHARACTERGUID)_LeaderTrader, "LeaderLib_Events_GenerationComplete")
AND
DB_LLLIB_LeaderTrader(_LeaderTrader)
THEN
LeaderLog_Log("DEBUG", "[LLLIB:LeaderTrader] Treasure generation complete.");

PROC
LLLIB_LeaderTrader_OnSpawned((CHARACTERGUID)_LeaderTrader, (STRING)_Level)
AND
DB_LLLIB_LeaderTrader_Appearance(_Level, _Template)
THEN
LLLIB_LeaderTrader_SetAppearance(_LeaderTrader, _Template);

PROC
LLLIB_LeaderTrader_OnSpawned((CHARACTERGUID)_LeaderTrader, (STRING)_Level)
AND
NOT DB_LLLIB_LeaderTrader_Appearance(_Level, _)
AND
DB_LLLIB_LeaderTrader_Appearance("Default", _Template)
THEN
LLLIB_LeaderTrader_SetAppearance(_LeaderTrader, _Template);

PROC
LLLIB_LeaderTrader_OnSpawned((CHARACTERGUID)_LeaderTrader, "TUT_Tutorial_A")
THEN
LLLIB_Treasure_CreateItemByStat_AddToQueue(_LeaderTrader, "ARM_Purge_UpperBody", 1, 0, 1);
LLLIB_Treasure_CreateItemByStat_AddToQueue(_LeaderTrader, "ARM_Purge_LowerBody", 1, 0, 1);
LLLIB_Treasure_CreateItemByStat_Start(_LeaderTrader, 100);
DB_TUT_LowerDeck_WindegoSpareCharacters(_LeaderTrader); // To avoid exploding

PROC
LLLIB_LeaderTrader_OnSpawned((CHARACTERGUID)_LeaderTrader, "LeaderLib_TestLevel")
THEN
//CharacterTransform(_LeaderTrader, "LLLIB_RetiredLeader_Act1_da17fca2-fe16-46d9-80b3-08971a8c8d49", 1, 1, 1, 1, 1, 1, 0);
LLLIB_Treasure_CreateItemByStat_AddToQueue(_LeaderTrader, "ARM_Purge_UpperBody", 1, 0, 1);
LLLIB_Treasure_CreateItemByStat_AddToQueue(_LeaderTrader, "ARM_Purge_LowerBody", 1, 0, 1);
LLLIB_Treasure_CreateItemByStat_Start(_LeaderTrader, 100);

PROC
LLLIB_LeaderTrader_OnSpawned((CHARACTERGUID)_LeaderTrader, (STRING)_Level)
THEN
ApplyStatus(_LeaderTrader, "LLLIB_PACIFIST", -1.0, 1);
LLLIB_Helper_RefreshEquipment(_LeaderTrader);

IF
RegionEnded(_Level)
AND
DB_LLLIB_LeaderTrader_CurrentAppearance(_Template)
THEN
NOT DB_LLLIB_LeaderTrader_CurrentAppearance(_Template);
//END_REGION

//REGION TUTORIAL
IF
GlobalFlagSet("TUT_LowerDeck_WindegoHasCastSpell")
AND
DB_LLLIB_Traders_Spawned(_LeaderTrader, "LLLIB_LeaderTrader", _Level)
THEN
DisplayText(_LeaderTrader, "Hrmph. Best to avoid trouble...");
CharacterUseSkill(_LeaderTrader, "Shout_ChameleonSkin", _LeaderTrader, 0, 1, 1);
TimerLaunch("LLLIB_Timeers_LeaderTrader_TUTDisappear", 2000);

IF
TimerFinished("LLLIB_Timeers_LeaderTrader_TUTDisappear")
AND
DB_LLLIB_Traders_Spawned(_LeaderTrader, "LLLIB_LeaderTrader", "TUT_Tutorial_A")
THEN
NOT DB_LLLIB_Traders_Spawned(_LeaderTrader, "LLLIB_LeaderTrader", "TUT_Tutorial_A");

IF
TimerFinished("LLLIB_Timeers_LeaderTrader_TUTDisappear")
AND
DB_LLLIB_LeaderTrader(_LeaderTrader)
THEN
SetOnStage(_LeaderTrader, 0);

IF
RegionEnded("TUT_Tutorial_A")
AND
DB_LLLIB_LeaderTrader(_LeaderTrader)
AND
DB_TUT_LowerDeck_WindegoSpareCharacters(_LeaderTrader)
THEN
NOT DB_TUT_LowerDeck_WindegoSpareCharacters(_LeaderTrader);
//END_REGION

//REGION DIALOG_TRADE_TOGGLING
//Disable trading until the player and trader have talked
IF
DB_Dialogs(_LeaderTrader, "LLLIB_RetiredLeader_Act1_Intro")
AND
DB_LLLIB_LeaderTrader((CHARACTERGUID)_LeaderTrader)
THEN
CharacterSetCanTrade(_LeaderTrader, 0);

IF
DialogEnded("LLLIB_RetiredLeader_Act1_Intro", _Instance)
AND
DialogGetInvolvedNPC(_Instance, 1, (CHARACTERGUID)_LeaderTrader)
AND
DB_LLLIB_LeaderTrader(_LeaderTrader)
THEN
CharacterSetCanTrade(_LeaderTrader, 1);
//END_REGION

//REGION DIALOG_NAME
IF
StoryEvent((CHARACTERGUID)_Trader, "LeaderLib_Events_OnLeaderTradeSpawned")
AND
GlobalGetFlag("LeaderLib_DiscoveredLeaderTraderBackground", 1)
THEN
CharacterSetCustomName(_Trader, "Lothar, Retired Commander");

IF
GlobalFlagSet("LeaderLib_DiscoveredLeaderTraderBackground")
AND
DB_LLLIB_LeaderTrader(_LeaderTrader)
THEN
CharacterSetCustomName(_LeaderTrader, "Lothar, Retired Commander");

IF
DialogStarted(_Dialog, _Instance)
AND
DB_LLLIB_LeaderTrader_Dialog(_ReferenceName, _Dialog)
AND
DialogGetInvolvedNPC(_Instance, 1, (CHARACTERGUID)_LeaderTrader)
AND
DB_LLLIB_LeaderTrader(_LeaderTrader)
AND
DB_LLLIB_Settings_DialogVariables("SpeakerName", _SpeakerVar)
THEN
//To ignore the "Old Man" title when referring to himself.
DialogSetVariableStringForInstance(_Instance, _SpeakerVar, "Lothar");
//END_REGION

//REGION UPDATER
PROC
LLLIB_System_UpdateDatabases()
THEN
LLLIB_LeaderTrader_InitSettings();
LeaderLog_Log("SYSTEM", "[LLLIB:LeaderTrader] Databases updated.");

PROC
LLLIB_System_RegisterDatabases()
THEN
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "LeaderTrader", "DB_LLLIB_LeaderTrader", 1);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "LeaderTrader", "DB_LLLIB_LeaderTrader_MetPlayer", 1);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "LeaderTrader", "DB_LLLIB_LeaderTrader_Dialog", 2);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "LeaderTrader", "DB_LLLIB_LeaderTrader_Appearance", 2);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "LeaderTrader", "DB_LLLIB_LeaderTrader_CurrentAppearance", 1);
LeaderLog_Log("SYSTEM", "[LLLIB:LeaderTrader] Databases registered.");
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader__LeaderLib"
