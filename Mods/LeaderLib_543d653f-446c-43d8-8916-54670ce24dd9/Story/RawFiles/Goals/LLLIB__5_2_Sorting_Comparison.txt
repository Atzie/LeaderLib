Version 1
SubGoalCombiner SGC_AND
INITSECTION
//DB_LLLIB_Sorter_Codex(_Index, _Char)
//DB_LLLIB_Sorter_Temp_CompareBlock(_SessionID, _ID, _ID2)
//DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortIndex, _Char, _Group, _ID, _Str, _LastSubIndex)
//DB_LLLIB_Sorter_Temp_NextPotentialGroup(_SessionID, _Char, _Group, _ID, _LastSubIndex)

//DB_LLLIB_Sorter_Temp_GroupSortRange(_SessionID, _Char, _Group, _Start, _End)
//DB_LLLIB_Sorter_Temp_GroupEntryIterator(_SessionID, _Char, _Group, _Index)
KBSECTION
//REGION GROUP_ADDING
PROC
LLLIB_Sorter_Internal_AddGroup((STRING)_SessionID, (STRING)_Char, (STRING)_Group)
AND
NOT DB_LLLIB_Sorter_Temp_Group(_, _SessionID, _Char, _Group)
AND
SysCount("DB_LLLIB_Sorter_Temp_Group", 4, _Index)
THEN
DB_LLLIB_Sorter_Temp_Group(_Index, _SessionID, _Char, _Group);

PROC
LLLIB_Sorter_Internal_AddToGroup((STRING)_SessionID, (STRING)_Char, (STRING)_Group, (STRING)_ID, (STRING)_Str, (INTEGER)_LastSubIndex, (INTEGER)_SortValue)
AND
DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortIndex, _Char, _LastGroup, _ID, _Str, _SubIndex)
THEN
NOT DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortIndex, _Char, _LastGroup, _ID, _Str, _SubIndex);

PROC
LLLIB_Sorter_Internal_AddToGroup((STRING)_SessionID, (STRING)_Char, (STRING)_Group, (STRING)_ID, (STRING)_Str, (INTEGER)_LastSubIndex, (INTEGER)_SortValue)
THEN
DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortValue, _Char, _Group, _ID, _Str, _LastSubIndex);
//END_REGION

//REGION GROUP_SORTING
PROC
LLLIB_Sorter_Internal_SortGroupInitially((STRING)_SessionID, (STRING)_Char, (STRING)_Group)
AND
DB_LLLIB_Sorter_Codex(_SortIndex, _CheckChar)
AND
DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _PastSortIndex, _Char, _Group, _ID, _Str, _LastSubIndex)
AND
StringSub(_Str, _LastSubIndex, 1, _CheckChar)
THEN
NOT DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _PastSortIndex, _Char, _Group, _ID, _Str, _LastSubIndex);
DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortIndex, _Char, _Group, _ID, _Str, _LastSubIndex);

QRY
LLLIB_Sorter_Internal_QRY_InComparisonBlock((STRING)_SessionID, (STRING)_ID, (STRING)_ID2)
AND
DB_LLLIB_Sorter_Temp_CompareBlock(_SessionID,_ID, _ID2)
THEN
DB_NOOP(1);

QRY
LLLIB_Sorter_Internal_QRY_InComparisonBlock((STRING)_SessionID, (STRING)_ID, (STRING)_ID2)
AND
DB_LLLIB_Sorter_Temp_CompareBlock(_SessionID,_ID2, _ID)
THEN
DB_NOOP(1);

QRY
LLLIB_Sorter_Internal_QRY_InComparisonBlock((STRING)_SessionID, (STRING)_ID)
AND
DB_LLLIB_Sorter_Temp_CompareBlock(_SessionID,_ID, _)
THEN
DB_NOOP(1);

QRY
LLLIB_Sorter_Internal_QRY_InComparisonBlock((STRING)_SessionID, (STRING)_ID)
AND
DB_LLLIB_Sorter_Temp_CompareBlock(_SessionID,_, _ID)
THEN
DB_NOOP(1);

PROC
LLLIB_Sorter_Internal_OnSortGroup((STRING)_SessionID, (STRING)_Char, (STRING)_Group)
AND
DB_LLLIB_Sorter_Codex(_Index, _Char)
AND
DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortIndex, _Char, _Group, _ID, _Str, _LastSubIndex)
AND
NOT LLLIB_Sorter_Internal_QRY_InComparisonBlock(_SessionID, _ID)
AND
DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortIndex2, _Char, _Group, _ID2, _Str2, _LastSubIndex2)
AND
_ID != _ID2
AND
NOT LLLIB_Sorter_Internal_QRY_InComparisonBlock(_SessionID, _ID, _ID2)
THEN
DB_LLLIB_Sorter_Temp_CompareBlock(_SessionID, _ID, _ID2);
LLLIB_Sorter_Internal_RunCompare(_SessionID, _Char, _Group, _ID, _ID2);

PROC
LLLIB_Sorter_Internal_ClearCompareBlock((STRING)_SessionID)
AND
DB_LLLIB_Sorter_Temp_CompareBlock(_SessionID, _ID, _ID2)
THEN
NOT DB_LLLIB_Sorter_Temp_CompareBlock(_SessionID, _ID, _ID2);

PROC
LLLIB_Sorter_Internal_RunCompare((STRING)_SessionID, (STRING)_Char, (STRING)_Group, (STRING)_ID, (STRING)_ID2)
AND
DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortIndex, _Char, _Group, _ID, _Str, _LastSubIndex)
AND
DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortIndex2, _Char, _Group, _ID2, _Str2, _LastSubIndex2)
AND
StringSub(_Str, _LastSubIndex, 1, _CheckChar1)
AND
StringSub(_Str2, _LastSubIndex2, 1, _CheckChar2)
AND
DB_LLLIB_Sorter_Codex(_CharValue1, _CheckChar1)
AND
DB_LLLIB_Sorter_Codex(_CharValue2, _CheckChar2)
THEN
LeaderLog_Log("DEBUG", "[LLLIB:Sorter:CompareValues] Comparing chars [",_CheckChar1,"] and [",_CheckChar2,"] in '",_Str,"' and '",_Str2,"'.");
LLLIB_Sorter_Internal_CompareValues(_SessionID, _Char, _Group, _ID, _ID2, _CharValue1, _CharValue2);

PROC
LLLIB_Sorter_Internal_FinalizeRemaindersInGroup((STRING)_SessionID, (STRING)_Char, (STRING)_Group)
AND
LLLIB_Sorter_QRY_CountStringsInGroup(_SessionID, _Char, _Group)
AND
DB_LLLIB_Sorter_Temp_TotalStringsInGroup(_SessionID, _Char, _Group, _GroupTotal)
AND
_GroupTotal > 1
/*
AND
LLLIB_Sorter_Internal_QRY_BuildGroupEntryIterator(_SessionID, _Char, _Group)
AND
DB_LLLIB_Sorter_Temp_GroupEntryIterator(_SessionID, _Char, _Group, _SortIndex)
*/
AND
DB_LLLIB_Sorter_Codex(_SortIndex, _)
AND
DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortIndex, _Char, _Group, _ID, _Str, _LastSubIndex)
THEN
LLLIB_Sorter_FinalizeString(_SessionID, _ID, _Str);
NOT DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortIndex, _Char, _Group, _ID, _Str, _LastSubIndex);
//NOT DB_LLLIB_Sorter_Temp_GroupEntryIterator(_SessionID, _Char, _Group, _SortIndex);
//END_REGION

//REGION COMPARISONS
PROC
LLLIB_Sorter_Internal_CompareValues((STRING)_SessionID, (STRING)_Char, (STRING)_Group, (STRING)_ID, (STRING)_ID2, (INTEGER)_CharValue1, (INTEGER)_CharValue2)
AND
_CharValue1 > _CharValue2
AND
DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortIndex, _Char, _Group, _ID, _Str, _LastSubIndex)
AND
DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortIndex2, _Char, _Group, _ID2, _Str2, _LastSubIndex2)
AND
DB_LLLIB_Sorter_Temp_TotalStringsInGroup(_SessionID, _Char, _Group, _Total)
AND
_SortIndex < _Total
AND
IntegerSum(_SortIndex2, 1, _NewSortIndex)
AND
IntegertoString(_NewSortIndex, _SortIndexStr)
THEN
LeaderLog_Log("DEBUG", "[LLLIB:Sorter:CompareValues] [",_Group,"] '",_Str,"' SortIndex set to [",_SortIndexStr,"] ( > ).");
NOT DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortIndex, _Char, _Group, _ID, _Str, _LastSubIndex);
DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _NewSortIndex, _Char, _Group, _ID, _Str, _LastSubIndex);

PROC
LLLIB_Sorter_Internal_CompareValues((STRING)_SessionID, (STRING)_Char, (STRING)_Group, (STRING)_ID, (STRING)_ID2, (INTEGER)_CharValue1, (INTEGER)_CharValue2)
AND
_CharValue1 < _CharValue2
AND
DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortIndex, _Char, _Group, _ID, _Str, _LastSubIndex)
AND
DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortIndex2, _Char, _Group, _ID2, _Str2, _LastSubIndex2)
AND
_SortIndex > 0
AND
IntegerSubtract(_SortIndex2, 1, _NewSortIndex)
AND
IntegertoString(_NewSortIndex, _SortIndexStr)
THEN
LeaderLog_Log("DEBUG", "[LLLIB:Sorter:CompareValues] [",_Group,"] '",_Str,"' SortIndex set to [",_SortIndexStr,"] ( < ).");
NOT DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortIndex, _Char, _Group, _ID, _Str, _LastSubIndex);
DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _NewSortIndex, _Char, _Group, _ID, _Str, _LastSubIndex);

PROC
LLLIB_Sorter_Internal_CompareValues((STRING)_SessionID, (STRING)_Char, (STRING)_Group, (STRING)_ID, (STRING)_ID2, (INTEGER)_CharValue1, (INTEGER)_CharValue2)
AND
_CharValue1 == _CharValue2
AND
DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortIndex, _Char, _Group, _ID, _Str, _LastSubIndex)
AND
DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortIndex2, _Char, _Group, _ID2, _Str2, _LastSubIndex2)
AND
IntegerSum(_LastSubIndex, 1, _CheckSubIndex1)
AND
IntegerSum(_LastSubIndex2, 1, _CheckSubIndex2)
AND
StringSub(_Str, _CheckSubIndex1, 1, _CheckChar1)
AND
StringSub(_Str2, _CheckSubIndex2, 1, _CheckChar2)
THEN
LLLIB_Sorter_Internal_ShiftGroupIfEqual(_SessionID, _Char, _Group, _ID, _ID2, _CheckChar1, _CheckChar2);

PROC
LLLIB_Sorter_Internal_ShiftGroupIfEqual((STRING)_SessionID, (STRING)_Char, (STRING)_Group, (STRING)_ID, (STRING)_ID2, (STRING)_CheckChar1, (STRING)_CheckChar2)
AND
_CheckChar1 == _CheckChar2
THEN
LeaderLog_Log("DEBUG", "[LLLIB:Sorter:CompareValues][",_Char,"][",_Group,"] Next char values are equal. Creating new group for the compared entries.");
LLLIB_Sorter_Internal_ShiftGroupForward(_SessionID, _Char, _Group, _ID);
LLLIB_Sorter_Internal_ShiftGroupForward(_SessionID, _Char, _Group, _ID2);

PROC
LLLIB_Sorter_Internal_ShiftGroupIfEqual((STRING)_SessionID, (STRING)_Char, (STRING)_Group, (STRING)_ID, (STRING)_ID2, (STRING)_CheckChar1, (STRING)_CheckChar2)
AND
_CheckChar1 != _CheckChar2
AND
DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortIndex, _Char, _Group, _ID, _Str, _LastSubIndex)
AND
DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortIndex2, _Char, _Group, _ID2, _Str2, _LastSubIndex2)
AND
IntegerSum(_LastSubIndex, 1, _CheckSubIndex1)
AND
IntegerSum(_LastSubIndex2, 1, _CheckSubIndex2)
AND
StringSub(_Str, _CheckSubIndex1, 1, _CheckChar1)
AND
StringSub(_Str2, _CheckSubIndex2, 1, _CheckChar2)
AND
DB_LLLIB_Sorter_Codex(_CharValue1, _CheckChar1)
AND
DB_LLLIB_Sorter_Codex(_CharValue2, _CheckChar2)
THEN
LeaderLog_Log("DEBUG", "[LLLIB:Sorter:CompareValues][",_Char,"][",_Group,"] Next char values are not equal. Shifting sub index and comparing again.");
NOT DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortIndex, _Char, _Group, _ID, _Str, _LastSubIndex);
NOT DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortIndex2, _Char, _Group, _ID2, _Str2, _LastSubIndex2);
DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortIndex, _Char, _Group, _ID, _Str, _CheckSubIndex1);
DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortIndex2, _Char, _Group, _ID2, _Str2, _CheckSubIndex2);
LLLIB_Sorter_Internal_RunCompare(_SessionID, _Char, _Group, _ID, _ID2);
//LLLIB_Sorter_Internal_CompareValues(_SessionID, _Char, _Group, _ID, _ID2, _CharValue1, _CharValue2);
//END_REGION

//REGION SHIFTING
PROC
LLLIB_Sorter_Internal_ShiftGroupForward((STRING)_SessionID, (STRING)_Char, (STRING)_Group, (STRING)_ID)
AND
DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortIndex, _Char, _Group, _ID, _Str, _LastSubIndex)
AND
_LastSubIndex < 256
AND
IntegerSum(_LastSubIndex, 1, _NewSubIndex)
AND
StringSub(_Str, _NewSubIndex, 1, _NewChar)
AND
StringConcatenate(_Group, _NewChar, _NewGroup)
THEN
NOT DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortIndex, _Char, _Group, _ID, _Str, _LastSubIndex);
DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, 0, _Char, _NewGroup, _ID, _Str, _NewSubIndex);
LLLIB_Sorter_Internal_AddGroup(_SessionID, _Char, _NewGroup);
LeaderLog_Log("DEBUG", "[LLLIB:Sorter:CompareValues][",_Char,"] Group shifted from [",_Group,"] to => new group [",_NewGroup,"].");

PROC
LLLIB_Sorter_Internal_ShiftGroupForward((STRING)_SessionID, (STRING)_Char, (STRING)_Group, (STRING)_ID)
AND
DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortIndex, _Char, _Group, _ID, _Str, _LastSubIndex)
AND
_LastSubIndex >= 256
THEN
LeaderLog_Log("DEBUG", "[LLLIB:Sorter][ERROR] [",_SessionID,"] String '",_Str,"' hit the substring limit. Removing from sort groups.");
NOT DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortIndex, _Char, _Group, _ID, _Str, _LastSubIndex);
//END_REGION

//REGION GROUP_ENTRY_ITERATOR
QRY
LLLIB_Sorter_Internal_QRY_BuildGroupEntryIterator((STRING)_SessionID, (STRING)_Char, (STRING)_Group)
AND
DB_LLLIB_Sorter_Temp_GroupEntryIterator(_SessionID, _Char, _Group, _Index)
THEN
NOT DB_LLLIB_Sorter_Temp_GroupEntryIterator(_SessionID, _Char, _Group, _Index);

QRY
LLLIB_Sorter_Internal_QRY_BuildGroupEntryIterator((STRING)_SessionID, (STRING)_Char, (STRING)_Group)
AND
DB_LLLIB_Sorter_Temp_GroupSortRange(_SessionID, _Char, _Group, _Start, _End)
THEN
NOT DB_LLLIB_Sorter_Temp_GroupSortRange(_SessionID, _Char, _Group, _Start, _End);

QRY
LLLIB_Sorter_Internal_QRY_BuildGroupEntryIterator((STRING)_SessionID, (STRING)_Char, (STRING)_Group)
AND
NOT DB_LLLIB_Sorter_Temp_GroupSortRange(_SessionID, _Char, _Group,_,_)
THEN
DB_LLLIB_Sorter_Temp_GroupSortRange(_SessionID, _Char, _Group, 0, 1);

QRY
LLLIB_Sorter_Internal_QRY_BuildGroupEntryIterator((STRING)_SessionID, (STRING)_Char, (STRING)_Group)
AND
DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortIndex, _Char, _Group, _ID, _Str, _LastSubIndex)
AND
DB_LLLIB_Sorter_Temp_GroupSortRange(_SessionID, _Char, _Group, _Start, _End)
AND
_SortIndex < _Start
THEN
NOT DB_LLLIB_Sorter_Temp_GroupSortRange(_SessionID, _Char, _Group, _Start, _End);
DB_LLLIB_Sorter_Temp_GroupSortRange(_SessionID, _Char, _Group, _SortIndex, _End);

QRY
LLLIB_Sorter_Internal_QRY_BuildGroupEntryIterator((STRING)_SessionID, (STRING)_Char, (STRING)_Group)
AND
DB_LLLIB_Sorter_Temp_GroupEntry(_SessionID, _SortIndex, _Char, _Group, _ID, _Str, _LastSubIndex)
AND
DB_LLLIB_Sorter_Temp_GroupSortRange(_SessionID, _Char, _Group, _Start, _End)
AND
_SortIndex > _End
THEN
NOT DB_LLLIB_Sorter_Temp_GroupSortRange(_SessionID, _Char, _Group, _Start, _End);
DB_LLLIB_Sorter_Temp_GroupSortRange(_SessionID, _Char, _Group, _Start, _SortIndex);

QRY
LLLIB_Sorter_Internal_QRY_BuildGroupEntryIterator((STRING)_SessionID, (STRING)_Char, (STRING)_Group)
AND
DB_LLLIB_Sorter_Temp_GroupSortRange(_SessionID, _Char, _Group, _Start, _End)
THEN
DB_LLLIB_Sorter_Temp_GroupEntryIteratorBuilder(_SessionID, _Char, _Group, _Start);

IF
DB_LLLIB_Sorter_Temp_GroupEntryIteratorBuilder(_SessionID, _Char, _Group, _Index)
AND
DB_LLLIB_Sorter_Temp_GroupSortRange(_SessionID, _Char, _Group, _Start, _End)
AND
_Index <= _End
THEN
LLLIB_Sorter_Internal_OnGroupEntryIteratorBuilder(_SessionID, _Char, _Group, _Index);

PROC
LLLIB_Sorter_Internal_OnGroupEntryIteratorBuilder((STRING)_SessionID, (STRING)_Char, (STRING)_Group, (INTEGER)_Index)
AND
IntegerSum(_Index, 1, _NextIndex)
THEN
DB_LLLIB_Sorter_Temp_GroupEntryIterator(_SessionID, _Char, _Group, _Index);
NOT DB_LLLIB_Sorter_Temp_GroupEntryIteratorBuilder(_SessionID, _Char, _Group, _Index);
DB_LLLIB_Sorter_Temp_GroupEntryIteratorBuilder(_SessionID, _Char, _Group, _NextIndex);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader__LeaderLib"
