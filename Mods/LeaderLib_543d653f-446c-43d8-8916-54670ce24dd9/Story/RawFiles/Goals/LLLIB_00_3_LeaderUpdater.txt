Version 1
SubGoalCombiner SGC_AND
INITSECTION
//DB_Mods_Registered(_ModName, _Version, _Author)
//DB_Mods_ActiveGoal(_ModName, _Author, _GoalTitle)
//DB_LeaderUpdater_RegisteredDatabase(_ModName, _Author, _ReferenceName, _DatabaseName, _Arity)
//DB_LeaderUpdater_RegisteredGoal(_ModName, _Author, _GoalTitle)
KBSECTION
//REGION REGISTERING
PROC
LeaderUpdater_Register_Mod((STRING)_ModName, (STRING)_Version, (STRING)_Author)
AND
NOT DB_Mods_Registered(_ModName, _Version, _Author)
THEN
LeaderUpdater_Clear_PreviousVersions(_ModName, _Author);
DB_Mods_Registered(_ModName, _Version, _Author);

PROC
LeaderUpdater_Register_ActiveGoal((STRING)_ModName, (STRING)_Author, (STRING)_GoalTitle)
AND
NOT DB_Mods_ActiveGoal(_ModName, _Author, _GoalTitle)
THEN
DB_Mods_ActiveGoal(_ModName, _Author, _GoalTitle);

PROC
LeaderUpdater_Register_Database((STRING)_ModName, (STRING)_Author, (STRING)_ReferenceName, (STRING)_DatabaseName, (INTEGER)_Arity)
THEN
DB_LeaderUpdater_RegisteredDatabase(_ModName, _Author, _ReferenceName, _DatabaseName, _Arity);

PROC
LeaderUpdater_Register_Goal((STRING)_ModName, (STRING)_Author, (STRING)_GoalTitle)
THEN
DB_LeaderUpdater_RegisteredGoal(_ModName, _Author, _GoalTitle);
//END_REGION

//REGION QUERIES
QRY
LeaderUpdater_QRY_ModUpdateNeeded((STRING)_ModName, (STRING)_Version, (STRING)_Author)
AND
NOT DB_Mods_Registered(_ModName, _Version, _Author)
THEN
DB_NOOP(1);

QRY
LeaderUpdater_QRY_ModIsActive((STRING)_ModName, (STRING)_Author)
AND
DB_Mods_Registered(_ModName, _Version, _Author)
AND
DB_Mods_ActiveGoal(_ModName, _Author, _GoalTitle)
AND
SysIsActive(_GoalTitle)
THEN
DB_NOOP(1);

QRY
LeaderUpdater_QRY_ModRegisteredActiveGoal((STRING)_ModName, (STRING)_Author)
AND
DB_Mods_ActiveGoal(_ModName, _Author, _GoalTitle)
THEN
DB_NOOP(1);

PROC
LeaderUpdater_CheckIfModIsActive((STRING)_ModName, (STRING)_Author, (STRING)_ActiveEvent, (STRING)_NotActiveEvent)
AND
LeaderUpdater_QRY_ModIsActive(_ModName, _Author)
THEN
LeaderLib_SendEvent(_ActiveEvent);

PROC
LeaderUpdater_CheckIfModIsActive((STRING)_ModName, (STRING)_Author, (STRING)_ActiveEvent, (STRING)_NotActiveEvent)
AND
NOT LeaderUpdater_QRY_ModIsActive(_ModName, _Author)
THEN
LeaderLib_SendEvent(_NotActiveEvent);
//END_REGION

//REGION RESET
PROC
LeaderUpdater_Clear_PreviousVersions((STRING)_ModName, (STRING)_Author)
AND
DB_Mods_Registered(_ModName, _Version, _Author)
THEN
NOT DB_Mods_Registered(_ModName, _Version, _Author);

PROC
LeaderUpdater_Clear_ActiveGoals((STRING)_ModName, (STRING)_Author)
AND
DB_Mods_ActiveGoal(_ModName, _Author, _GoalTitle)
THEN
NOT DB_Mods_ActiveGoal(_ModName, _Author, _GoalTitle);

PROC
LeaderUpdater_Reset_AllGoals((STRING)_ModName, (STRING)_Author)
AND
DB_LeaderUpdater_RegisteredGoal(_ModName, _Author, _GoalTitle)
AND
SysIsCompleted(_GoalTitle)
THEN
SysSetGoalSleeping(_GoalTitle);
//END_REGION

//REGION UPDATER
PROC
LLLIB_System_UpdateDatabases()
THEN
//LeaderLog_Log("DEBUG", "[LLLIB:LeaderUpdater] Databases updated.");
DB_NOOP(1);

PROC
LLLIB_System_RegisterDatabases()
THEN
/*
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "LeaderUpdater", "DB_Mods_Registered", 3);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "LeaderUpdater", "DB_Mods_ActiveGoal", 3);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "LeaderUpdater", "DB_LeaderUpdater_RegisteredDatabase", 5);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "LeaderUpdater", "DB_LeaderUpdater_RegisteredGoal", 3);
*/
LeaderLog_Log("DEBUG", "[LLLIB:LeaderUpdater] Databases registered.");
//END_REGION

//REGION UNINSTALLING
PROC
LeaderUpdater_UnregisterMod((STRING)_ModName, (STRING)_Author)
AND
DB_Mods_Registered(_ModName, _Version, _Author)
THEN
NOT DB_Mods_Registered(_ModName, _Version, _Author);

PROC
LeaderUpdater_UninstallMod((STRING)_ModName, (STRING)_Author)
THEN
LeaderUpdater_UnregisterMod(_ModName, _Author);

PROC
LeaderUpdater_ClearAllDatabases((STRING)_ModName, (STRING)_Author)
AND
DB_LeaderUpdater_RegisteredDatabase(_ModName, _Author, _GoalTitle, _DatabaseName, _Arity)
THEN
SysClear(_DatabaseName, _Arity);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader__LeaderLib"
