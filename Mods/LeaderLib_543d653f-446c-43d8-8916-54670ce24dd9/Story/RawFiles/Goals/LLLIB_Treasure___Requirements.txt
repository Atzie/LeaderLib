Version 1
SubGoalCombiner SGC_AND
INITSECTION
//Settings
//DB_LLLIB_Requirements_PartyLevel(_RequirementID, _MinLevel, _MaxLevel, _StrictMode)
//DB_LLLIB_Requirements_Flag(_RequirementID, _Flag, _FlagType, _FlagVal)
//DB_LLLIB_Requirements_MaxItemAmount(_RequirementID, _MaxAmount)

//Dynamic
//DB_LLLIB_Requirements_IsUnlocked(_RequirementID)
KBSECTION
//REGION REGISTERING
PROC
LLLIB_Requirements_AddFlagRequirement((STRING)_RequirementID, (STRING)_Flag, (STRING)_FlagType)
AND
_RequirementID != ""
THEN
LLLIB_Requirements_AddFlagRequirement(_RequirementID, _Flag, _FlagType, 1);

PROC
LLLIB_Requirements_AddFlagRequirement((STRING)_RequirementID, (STRING)_Flag, (STRING)_FlagType, (INTEGER)_FlagVal)
AND
_FlagType != "Character"
AND
_RequirementID != ""
THEN
DB_LLLIB_Requirements_Flag(_RequirementID, _Flag, _FlagType, _FlagVal);

PROC
LLLIB_Requirements_AddFlagRequirement((STRING)_RequirementID, (STRING)_Flag, "Character", (INTEGER)_FlagVal)
AND
_RequirementID != ""
THEN
DB_LLLIB_Requirements_Flag(_RequirementID, _Flag, "Object", _FlagVal);

PROC
LLLIB_Requirements_AddPartyLevelRequirement((STRING)_RequirementID, (INTEGER)_MinLevel, (INTEGER)_MaxLevel)
AND
_RequirementID != ""
THEN
LLLIB_Requirements_AddPartyLevelRequirement(_RequirementID, _MinLevel, _MaxLevel, 0);

PROC
LLLIB_Requirements_AddPartyLevelRequirement((STRING)_RequirementID, (INTEGER)_MinLevel, (INTEGER)_MaxLevel, (INTEGER)_StrictMode)
AND
_RequirementID != ""
THEN
DB_LLLIB_Requirements_PartyLevel(_RequirementID, _MinLevel, _MaxLevel, _StrictMode);

PROC
LLLIB_Requirements_AddMaxAmountRequirement((STRING)_RequirementID, (INTEGER)_MaxAmount)
AND
_RequirementID != ""
THEN
DB_LLLIB_Requirements_MaxItemAmount(_RequirementID, _MaxAmount);

//END_REGION

//REGION REQUIREMENT_CHECK
QRY
LLLIB_QRY_Requirements_LevelMet((CHARACTERGUID)_Character, (INTEGER)_MinLevel, (INTEGER)_MaxLevel)
AND
CharacterGetLevel(_Character, _Level)
AND
_Level >= _MinLevel
AND
LLLIB_QRY_Requirements_Internal_MaxLevelCheck(_Level, _MaxLevel)
THEN
DB_NOOP(1);

QRY
LLLIB_QRY_Requirements_Internal_MaxLevelCheck((INTEGER)_Level, (INTEGER)_MaxLevel)
AND
_Level <= _MaxLevel
THEN
DB_NOOP(1);

QRY
LLLIB_QRY_Requirements_Internal_MaxLevelCheck((INTEGER)_Level, (INTEGER)_MaxLevel)
AND
_MaxLevel <= 0
THEN
DB_NOOP(1);

QRY
LLLIB_QRY_Requirements_PartyLevelMet((STRING)_RequirementID)
AND
DB_LLLIB_Requirements_PartyLevel(_RequirementID, _MinLevel, _MaxLevel, _StrictMode)
AND
_StrictMode <= 0
AND
LLLIB_Helper_QRY_PartyLevelRangeMet(_MinLevel, _MaxLevel)
THEN
DB_NOOP(1);

QRY
LLLIB_QRY_Requirements_PartyLevelMet((STRING)_RequirementID)
AND
DB_LLLIB_Requirements_PartyLevel(_RequirementID, _MinLevel, _MaxLevel, _StrictMode)
AND
_StrictMode >= 1
AND
LLLIB_Helper_QRY_PartyLevelRangeMet_Strict(_MinLevel, _MaxLevel)
THEN
DB_NOOP(1);

QRY
LLLIB_QRY_Requirements_PartyLevelMet((STRING)_RequirementID)
AND
NOT DB_LLLIB_Requirements_PartyLevel(_RequirementID, _, _, _)
THEN
DB_NOOP(1);

QRY
LLLIB_QRY_Requirements_PartyLevelMet((STRING)_RequirementID)
AND
_RequirementID == ""
THEN
DB_NOOP(1);

QRY
LLLIB_QRY_Requirements_PartyFlagMet((STRING)_RequirementID)
AND
DB_LLLIB_Requirements_Flag(_RequirementID, _Flag, _FlagType, _FlagVal)
AND
LLLIB_Helper_QRY_PartyFlagSet(_Flag, _FlagType, _FlagVal)
THEN
DB_NOOP(1);

QRY
LLLIB_QRY_Requirements_PartyFlagMet((STRING)_RequirementID)
AND
NOT DB_LLLIB_Requirements_Flag(_RequirementID,_,_,_)
THEN
DB_NOOP(1);

QRY
LLLIB_QRY_Requirements_PartyFlagMet((STRING)_RequirementID)
AND
_RequirementID == ""
THEN
DB_NOOP(1);

QRY
LLLIB_QRY_Requirements_AllMet((STRING)_RequirementID)
AND
_RequirementID == ""
THEN
DB_NOOP(1);

QRY
LLLIB_QRY_Requirements_AllMet((STRING)_RequirementID)
AND
_RequirementID != ""
AND
LLLIB_QRY_Requirements_PartyFlagMet(_RequirementID)
AND
LLLIB_QRY_Requirements_PartyLevelMet(_RequirementID)
THEN
DB_NOOP(1);
//END_REGION

//REGION LOCK_UNLOCK_PROC_EVENTS
PROC
LLLIB_Requirements_RequirementUnlocked((STRING)_RequirementID)
THEN
LeaderLog_Debug("[LLLIB:Requirements] Requirement[",_RequirementID,"] unlocked.");

PROC
LLLIB_Requirements_RequirementLocked((STRING)_RequirementID)
THEN
LeaderLog_Debug("[LLLIB:Requirements] Requirement[",_RequirementID,"] locked.");
//END_REGION

//REGION FLAG_UNLOCKING
IF
ObjectFlagSet(_Flag, _Object, _)
AND
DB_LLLIB_Requirements_Flag(_RequirementID, _Flag, "Object", 1)
THEN
LLLIB_Requirements_RequirementUnlocked(_RequirementID);

IF
ObjectFlagCleared(_Flag, _Object, _)
AND
DB_LLLIB_Requirements_Flag(_RequirementID, _Flag, "Object", 0)
THEN
LLLIB_Requirements_RequirementUnlocked(_RequirementID);

IF
ObjectFlagSet(_Flag, (CHARACTERGUID)_Object, _)
AND
UserGetFlag(_Object, _Flag, _FlagVal)
AND
DB_LLLIB_Requirements_Flag(_RequirementID, _Flag, "User", _FlagVal)
THEN
LLLIB_Requirements_RequirementUnlocked(_RequirementID);

IF
ObjectFlagCleared(_Flag, (CHARACTERGUID)_Object, _)
AND
UserGetFlag(_Object, _Flag, _FlagVal)
AND
DB_LLLIB_Requirements_Flag(_RequirementID, _Flag, "User", _FlagVal)
THEN
LLLIB_Requirements_RequirementUnlocked(_RequirementID);

IF
GlobalFlagSet(_Flag)
AND
DB_LLLIB_Requirements_Flag(_RequirementID, _Flag, "Global", 1)
THEN
LLLIB_Requirements_RequirementUnlocked(_RequirementID);

IF
GlobalFlagCleared(_Flag)
AND
DB_LLLIB_Requirements_Flag(_RequirementID, _Flag, "Global", 0)
THEN
LLLIB_Requirements_RequirementUnlocked(_RequirementID);
//END_REGION

//REGION LEVEL_REQUIREMENT_UNLOCKED
IF
CharacterLeveledUp(_Player)
AND
CharacterIsPlayer(_Player, 1)
AND
DB_CurrentLevel(_Level)
AND
DB_LLLIB_Requirements_PartyLevel(_RequirementID, _MinLevel, _MaxLevel, _StrictMode)
AND
NOT DB_LLLIB_Requirements_IsUnlocked(_RequirementID)
AND
LLLIB_QRY_Requirements_LevelMet(_Player, _MinLevel, _MaxLevel)
AND
LLLIB_QRY_Requirements_PartyFlagMet(_RequirementID)
THEN
LLLIB_Requirements_RequirementUnlocked(_RequirementID);
DB_LLLIB_Requirements_IsUnlocked(_RequirementID);

IF
CharacterLeveledUp(_Player)
AND
CharacterIsPlayer(_Player, 1)
AND
DB_CurrentLevel(_Level)
AND
DB_LLLIB_Requirements_PartyLevel(_RequirementID, _MinLevel, _MaxLevel, _StrictMode)
AND
DB_LLLIB_Requirements_IsUnlocked(_RequirementID)
AND
_StrictMode > 0
AND
NOT LLLIB_QRY_Requirements_LevelMet(_Player, _MinLevel, _MaxLevel)
THEN
LLLIB_Requirements_RequirementLocked(_RequirementID);
NOT DB_LLLIB_Requirements_IsUnlocked(_RequirementID);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader__LeaderLib"
