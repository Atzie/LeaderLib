Version 1
SubGoalCombiner SGC_AND
INITSECTION
//DB_LLLIB_Treasure_Temp_ActiveTraderDialog(_Trader, _Instance)
KBSECTION
IF
GameStarted("LeaderLib_TestLevel",_)
THEN
LLLIB_Requirements_AddFlagRequirement("LLLIB_DebugLevel_Trader1_SpawnFlag", "LLLIB_DebugLevel_SpawnTrader1", "Global", 1);
LLLIB_Requirements_AddFlagRequirement("LLLIB_DebugLevel_TraderRequirements1", "LLLIB_DebugLevel_TalkedToTrader", "Object", 1);
LLLIB_Requirements_AddFlagRequirement("LLLIB_DebugLevel_NotTraderRequirements1", "LLLIB_DebugLevel_TalkedToTrader", "Object", 0);
LLLIB_Requirements_AddFlagRequirement("LLLIB_DebugLevel_ChestRequirements1", "LLLIB_DebugLevel_OpenedChest", "Object", 1);
LLLIB_Requirements_AddFlagRequirement("LLLIB_DebugLevel_NotChestRequirements1", "LLLIB_DebugLevel_OpenedChest", "Object", 0);
LL_DebugLevel_TreasureTest2();

IF
CharacterUsedItem(_Char, _Item)
AND
GetTemplate(_Item, _Template)
AND
StringContains(_Template, "Chest", 1)
THEN
ObjectSetFlag(_Char, "LLLIB_DebugLevel_OpenedChest");

IF
TradeEnds(_Player, _Trader)
AND
DB_LLLIB_Traders_Spawned(_Trader, "LLLIB_TestLevel_Trader", _Level)
THEN
ObjectSetFlag(_Player, "LLLIB_DebugLevel_TalkedToTrader");

IF
RequestTrade(_Player, _Trader)
AND
DB_LLLIB_Traders_Spawned(_Trader, "LLLIB_TestLevel_Trader", _Level)
THEN
ObjectSetFlag(_Player, "LLLIB_DebugLevel_TalkedToTrader");

IF
TextEventSet("llspawn")
THEN
LeaderLog_Log("DEBUG", "[LLLIB:DebugLevel] Set trader spawn flag to true.");
GlobalSetFlag("LLLIB_DebugLevel_SpawnTrader1");

IF
TextEventSet("lltest1")
THEN
LeaderLog_Log("DEBUG", "[LLLIB:DebugLevel] Registered debug trader.");
LLLIB_DebugLevel_TraderTest();
LeaderLib_SendEvent("LeaderLib_Commands_SpawnTraders");

IF
TextEventSet("lltest2")
THEN
LeaderLog_Log("DEBUG", "[LLLIB:DebugLevel] Registered a bunch of treasure.");
LLLIB_DebugLevel_TreasureTest();

IF
TextEventSet("lltest3")
THEN
LeaderLog_Log("DEBUG", "[LLLIB:DebugLevel] Registered a bunch of mod menus.");
LLLIB_DebugLevel_ModMenuTest();

//REGION TESTS
IF
StoryEvent((CHARACTERGUID)_Trader, "LeaderLib_Events_OnTraderSpawned")
AND
GetVarString(_Trader, "LeaderLib_TraderID", "LLLIB_TestLevel_Trader")
//DB_LLLIB_Traders_Spawned(_Trader, "LLLIB_TestLevel_Trader", _Level)
THEN
SetTag(_Trader, "LLLIB_Trader_GenerateOnDialog");

PROC
LLLIB_DebugLevel_TraderTest()
THEN
LLLIB_Trader_Register_Trader("LLLIB_TestLevel_Trader", "Elves_Female_Clothing_3ba29ecd-4849-494d-a9a6-6221eea6761c", 1);
LLLIB_Trader_Register_Level("LLLIB_TestLevel_Trader", "LeaderLib_TestLevel", "LLLIB_DebugLevel_Trader1_SpawnFlag");
LLLIB_Trader_Register_PositionObject("LLLIB_TestLevel_Trader", "LeaderLib_TestLevel", ITEMGUID_LLLIB_Debug_TestChest_ff6c9edf-aa21-447a-8bb2-2a647a8dae46);
LLLIB_Trader_Register_Dialog("LLLIB_TestLevel_Trader", "", "LLLIB_LeaderTrader_Default");

LLLIB_Treasure_Register_TreasureToTemplate("LLLIB_TestLevel_Trader", "Elves_Female_Clothing_3ba29ecd-4849-494d-a9a6-6221eea6761c");
LLLIB_Treasure_Register_TreasureTable("LLLIB_TestLevel_Trader", "TEST_Generation", "", 1);
LLLIB_Treasure_AddTreasureItemTemplate("LLLIB_TestLevel_Trader", "LOOT_Source_Orb_106a7107-cf36-4331-b5b5-6de71969f370", 1, "LLLIB_DebugLevel_TraderRequirements1");
LLLIB_Treasure_AddTreasureItemStat("LLLIB_TestLevel_Trader", "WPN_Cheat_Sword_1H_RuneSlot2", 1, "LLLIB_DebugLevel_TraderRequirements1");
//LLLIB_Requirements_AddPartyLevelRequirement("LLLIB_DebugLevel_TraderRequirements1", 2, 2);

LLLIB_Treasure_Configure_GenerationType("LLLIB_TestLevel_Trader", "LOOT_Source_Orb_106a7107-cf36-4331-b5b5-6de71969f370", "DIALOG_STARTED");
LLLIB_Treasure_Configure_GenerationType("LLLIB_TestLevel_Trader", "WPN_Cheat_Sword_1H_RuneSlot2", "DIALOG_ENDED");
//LLLIB_Treasure_Register_TreasureTable("LLLIB_LeaderTrader_Misc", "ST_WeaponNormal", "LLLIB_RegionIsFortJoy", 1);
LLLIB_Treasure_Register_TreasureTable("LLLIB_TestLevel_Trader", "TEST_Generation", "LLLIB_DebugLevel_NotChestRequirements1", 1);
//LLLIB_Treasure_AddTreasureItemTemplate("LLLIB_LeaderTrader_ModBooks", "CON_Potion_Fire_Res_A_e78b642c-0216-4df4-b691-a41ff4747b6a", 8);
//LLLIB_Treasure_AddTreasureItemStat("LLLIB_LeaderTrader_ModBooks", "WPN_Cheat_Sword_1H_RuneSlot2", 1);

PROC
LLLIB_DebugLevel_TreasureTest()
THEN
LLLIB_Treasure_Register_TreasureToObject("LLLIB_TestLevel_Chest1", ITEMGUID_LLLIB_Debug_TestChest_ff6c9edf-aa21-447a-8bb2-2a647a8dae46);
LLLIB_Treasure_Register_TreasureTable("LLLIB_TestLevel_Chest1", "TEST_Generation", "LLLIB_DebugLevel_TraderRequirements1", 1);
LLLIB_Treasure_AddTreasureItemTemplate("LLLIB_TestLevel_Chest1", "LOOT_Source_Orb_106a7107-cf36-4331-b5b5-6de71969f370", 2, "LLLIB_DebugLevel_ChestRequirements1");
LLLIB_Treasure_Configure_AddMaxAmount("LLLIB_TestLevel_Chest1", "LOOT_Source_Orb_106a7107-cf36-4331-b5b5-6de71969f370", 1);

//LLLIB_Treasure_AddTreasureItemTemplate("LLLIB_TestLevel_Chest1", "WPN_Dwarves_Sword_2H_B_03f8fb7a-59cf-47eb-9298-79cedaf744e5", 1);
LLLIB_Treasure_Configure_ItemLevel("LLLIB_TestLevel_Chest1", "WPN_Dwarves_Sword_2H_B_03f8fb7a-59cf-47eb-9298-79cedaf744e5", 0, 5, 10);
//LLLIB_Treasure_AddTreasureItemTemplate("LLLIB_TestLevel_Chest1", "WPN_Elves_Spear_2H_B_bec707cd-8340-4d4d-8cdc-edfedf7f311d", 1);
LLLIB_Treasure_Configure_ItemLevel("LLLIB_TestLevel_Chest1", "WPN_Elves_Spear_2H_B_bec707cd-8340-4d4d-8cdc-edfedf7f311d", 0, 1);

//GlobalSetFlag("LeaderLib_DiscoveredLeaderTraderBackground");

//Sorting/Menu test

PROC
LL_DebugLevel_TreasureTest2()
THEN
LLLIB_Treasure_Register_TreasureToObject("LLLIB_TestLevel_Chest2", ITEMGUID_LLLIB_DebugLevel_TestChest2_cde2491b-741c-4442-a016-74761b43f3c5);
//LLLIB_Treasure_AddTreasureItemStat("LLLIB_TestLevel_Chest2", "WPN_Cheat_Sword_1H_RuneSlot2", 1, "LLLIB_DebugLevel_Trader1_SpawnFlag");
LLLIB_Treasure_AddTreasureItemStat("LLLIB_TestLevel_Chest2", "WPN_Cheat_Sword_1H_RuneSlot2", 1, "");
LLLIB_Treasure_Configure_ItemLevel("LLLIB_TestLevel_Chest2", "WPN_Cheat_Sword_1H_RuneSlot2", 0, 2, 13);
LLLIB_Treasure_Configure_AddDeltaMod("LLLIB_TestLevel_Chest2", "WPN_Cheat_Sword_1H_RuneSlot2", "Boost_Weapon_Ability_FireSpecialist_Staff", 75);
LLLIB_Treasure_Configure_AddDeltaMod("LLLIB_TestLevel_Chest2", "WPN_Cheat_Sword_1H_RuneSlot2", "Boost_Weapon_Secondary_Accuracy_Medium", 20);
LLLIB_Treasure_Configure_AddDeltaMod("LLLIB_TestLevel_Chest2", "WPN_Cheat_Sword_1H_RuneSlot2", "Boost_Weapon_Damage_Air_Medium_Axe", 40);
LLLIB_Treasure_Configure_AddRune("LLLIB_TestLevel_Chest2", "WPN_Cheat_Sword_1H_RuneSlot2", "LOOT_Rune_Flame_Large_9ac874d8-a7e5-48b1-954a-b11b46f6f390", 25);
LLLIB_Treasure_Configure_AddRune("LLLIB_TestLevel_Chest2", "WPN_Cheat_Sword_1H_RuneSlot2", "LOOT_Rune_Masterwork_Large_7e16d9af-6865-4f0f-a67a-144b8ef2da26", 15);
LLLIB_Treasure_Configure_AddRune("LLLIB_TestLevel_Chest2", "WPN_Cheat_Sword_1H_RuneSlot2", "LOOT_Rune_Thunder_Small_f27c8738-e46c-4780-98a1-2db27407e6ea", 15);
//LLLIB_Treasure_Configure_GenerationType("LLLIB_TestLevel_Chest2", "WPN_Cheat_Sword_1H_RuneSlot2", "REQUIREMENT_UNLOCKED");

PROC
LLLIB_DebugLevel_ModMenuTest()
THEN
LeaderLib_RegisterModMenu("LLZ1", "[Zieonimus] Settings", "LLLIB_SettingsMenu", "LeaderLib", "LaughingLeader");
LeaderLib_RegisterModMenu("LLZ2", "[Zzznonom] Settings", "LLLIB_SettingsMenu", "LeaderLib", "LaughingLeader");
LeaderLib_RegisterModMenu("LLZ3", "[Zzaonimus] Settings", "LLLIB_SettingsMenu", "LeaderLib", "LaughingLeader");
LeaderLib_RegisterModMenu("LLZ4", "[Zaronimus] Settings", "LLLIB_SettingsMenu", "LeaderLib", "LaughingLeader");
LeaderLib_RegisterModMenu("LLZ5", "[Zironimus] Settings", "LLLIB_SettingsMenu", "LeaderLib", "LaughingLeader");
LeaderLib_RegisterModMenu("LLNWIZ", "[Naming Wizard] Settings", "LLLIB_SettingsMenu", "LeaderLib", "LaughingLeader");
LeaderLib_RegisterModMenu("LLEQSET", "[Equipment Sets] Settings", "LLLIB_SettingsMenu", "LeaderLib", "LaughingLeader");
LeaderLib_RegisterModMenu("LLDBT", "[Debug Tools] Settings", "LLLIB_SettingsMenu", "LeaderLib", "LaughingLeader");
LeaderLib_RegisterModMenu("LLZasd7", "[Blaaaabbbbbzter] Settings", "LLLIB_SettingsMenu", "LeaderLib", "LaughingLeader");
LeaderLib_RegisterModMenu("LLZasd6", "[Blaaaabbbbbzter] Settings", "LLLIB_SettingsMenu", "LeaderLib", "LaughingLeader");
LeaderLib_RegisterModMenu("LLasdZ92", "[Blaaaabbbbbzter9] Settings", "LLLIB_SettingsMenu", "LeaderLib", "LaughingLeader");
LeaderLib_RegisterModMenu("LLTest10", "Zeronimus", "LLLIB_SettingsMenu", "LeaderLib", "LaughingLeader");
LeaderLib_RegisterModMenu("LLTest7", "Bananas", "LLLIB_SettingsMenu", "LeaderLib", "LaughingLeader");
LeaderLib_RegisterModMenu("LLTest2", "Apples2", "LLLIB_SettingsMenu", "LeaderLib", "LaughingLeader");
LeaderLib_RegisterModMenu("LLTest1", "Apples1", "LLLIB_SettingsMenu", "LeaderLib", "LaughingLeader");
LeaderLib_RegisterModMenu("LLZZ2", "[ModMenu2] Settings", "LLLIB_SettingsMenu", "LeaderLib", "LaughingLeader");
LeaderLib_RegisterModMenu("LLZZ11", "[ModMenu11] Settings", "LLLIB_SettingsMenu", "LeaderLib", "LaughingLeader");
LeaderLib_RegisterModMenu("LLZZ3", "[ModMenu3] Settings", "LLLIB_SettingsMenu", "LeaderLib", "LaughingLeader");
LeaderLib_RegisterModMenu("LLZZ5", "[ModMenu5] Settings", "LLLIB_SettingsMenu", "LeaderLib", "LaughingLeader");
LeaderLib_RegisterModMenu("LLZZ7", "[ModMenu7] Settings", "LLLIB_SettingsMenu", "LeaderLib", "LaughingLeader");
LeaderLib_RegisterModMenu("LLZZ9", "[ModMenu9] Settings", "LLLIB_SettingsMenu", "LeaderLib", "LaughingLeader");
LeaderLib_RegisterModMenu("LLZZ10", "[ModMenu10] Settings", "LLLIB_SettingsMenu", "LeaderLib", "LaughingLeader");
LeaderLib_RegisterModMenu("LLZZ12", "[ModMenu12] Settings", "LLLIB_SettingsMenu", "LeaderLib", "LaughingLeader");
LeaderLib_RegisterModMenu("LLZZ1", "[ModMenu1] Settings", "LLLIB_SettingsMenu", "LeaderLib", "LaughingLeader");
LeaderLib_RegisterModMenu("LLZZ6", "[ModMenu6] Settings", "LLLIB_SettingsMenu", "LeaderLib", "LaughingLeader");
LeaderLib_RegisterModMenu("LLZZ4", "[ModMenu4] Settings", "LLLIB_SettingsMenu", "LeaderLib", "LaughingLeader");
LeaderLib_RegisterModMenu("LLZZ8", "[ModMenu8] Settings", "LLLIB_SettingsMenu", "LeaderLib", "LaughingLeader");
//END_REGION

/*
IF
StoryEvent(_, "LeaderLib_Initialized")
AND
LLLIB_StringExt_QRY_CompareStrings("Test", "[ModMenu2] Settings", "[ModMenu10] Settings")
AND
DB_LLLIB_DictionarySort_Temp_StringCompare_Results("Test", _Str1, _Str2, _CompareVal)
AND
IntegertoString(_CompareVal, _CompareValStr)
THEN
LeaderLog_Log("DEBUG", "[LLLIB:DebugLevel] String comparison: '",_Str1,"' and '",_Str2,"' = [",_CompareValStr,"]");
*/

//REGION PLAYER_DATABASE_FIX
IF
GameStarted("LeaderLib_TestLevel",_)
THEN
TimerLaunch("LeaderLib_TestLevel_IteratorDelay", 500);

IF
TimerFinished("LeaderLib_TestLevel_IteratorDelay")
THEN
//LeaderLog_Log("DEBUG", "[LLLIB:DebugLevel] ","Searching for players.");
CharacterLaunchIterator("LLLIB_Debug_AddPlayer");
LeaderLib_SendEvent("LLLIB_Events_TestEvent");

IF
StoryEvent(_, "LLLIB_Events_TestEvent")
THEN
LeaderLog_Log("DEBUG", "[LLLIB:DebugLevel] ","LLLIB_Events_TestEvent ran.");

IF
StoryEvent((CHARACTERGUID)_Player, "LLLIB_Debug_AddPlayer")
AND
CharacterIsPlayer(_Player, 1)
AND
NOT DB_IsPlayer(_Player)
THEN
DB_IsPlayer(_Player);
//LeaderLog_Log("DEBUG", "[LLLIB:DebugLevel] ","Added player to DB_IsPlayer.");
//ObjectClearFlag(_Player, "LLLIB_LeaderTrader_PlayerIntroducedSelf");
//END_REGION

IF
SkillCast(_Player, _Skill, _)
AND
CharacterIsPlayer(_Player, 1)
THEN
CharacterResetCooldowns(_Player);

IF
StoryEvent((CHARACTERGUID)_Char, "LeaderLib_Events_OnCombatLog")
THEN
LeaderLog_SetOneshotTarget(_Char);
LeaderLog_SetNextStatusColor(_Char, "#FF0000", "30");
LeaderLog_Log("STATUS", "[LLLIB:Debug] Color text!");

/*
IF
RegionEnded(_Level)
AND
DB_LLLIB_LeaderTrader(_LeaderTrader)
AND
CharacterIsPlayer(_LeaderTrader, 1)
THEN
CharacterMakeNPC(_LeaderTrader);
CharacterRemoveFromParty(_LeaderTrader);
*/

//REGION LEVERS
IF
CharacterUsedItem(_Character, ITEMGUID_LLLIB_Debug_TestLeverB_65136f61-80ec-4965-bce9-5789eea56aca)
THEN
LLLIB_Treasure_AddToGenerationQueue(CHARACTERGUID_S_LLLIB_LeaderTrader_61ae5acc-1537-4970-82bb-d408a3334574, "LLLIB_LeaderTrader_ModBooks", "MANUAL");

/*
IF
CharacterUsedItem(_, ITEMGUID_LLLIB_DebugLever_TestRandom_d3152baa-c6d4-4e8e-a622-a6bb9c149b3e)
AND
LLLIB_Random(1, 19)
AND
DB_LLLIB_Temp_RandomResult(_Ran)
AND
IntegertoString(_Ran, _RanStr)
THEN
NOT DB_LLLIB_Temp_RandomResult(_Ran);
LeaderLog_Log("DEBUG", "[LLLIB:TreasureSystem] Random range result: ",_RanStr," | Min: 1 Max: 19");
*/

/*
IF
CharacterUsedItem(CHARACTERGUID_S_LLLIB_LeaderTrader_61ae5acc-1537-4970-82bb-d408a3334574, ITEMGUID_LLLIB_DebugLever_TestRandom_d3152baa-c6d4-4e8e-a622-a6bb9c149b3e)
AND
CharacterIsPlayer(CHARACTERGUID_S_LLLIB_LeaderTrader_61ae5acc-1537-4970-82bb-d408a3334574, 1)
AND
CharacterGetOwner(CHARACTERGUID_S_LLLIB_LeaderTrader_61ae5acc-1537-4970-82bb-d408a3334574, _Owner)
THEN
CharacterRemoveFromPlayerCharacter(CHARACTERGUID_S_LLLIB_LeaderTrader_61ae5acc-1537-4970-82bb-d408a3334574, _Owner);
CharacterRemoveFromParty(CHARACTERGUID_S_LLLIB_LeaderTrader_61ae5acc-1537-4970-82bb-d408a3334574);
CharacterMakeNPC(CHARACTERGUID_S_LLLIB_LeaderTrader_61ae5acc-1537-4970-82bb-d408a3334574);

IF
CharacterUsedItem(_, ITEMGUID_LLLIB_DebugLever_TestRandom_d3152baa-c6d4-4e8e-a622-a6bb9c149b3e)
AND
CharacterIsPlayer(CHARACTERGUID_S_LLLIB_LeaderTrader_61ae5acc-1537-4970-82bb-d408a3334574, 0)
THEN
CharacterMakePlayer(CHARACTERGUID_S_LLLIB_LeaderTrader_61ae5acc-1537-4970-82bb-d408a3334574);
MakePlayerActive(CHARACTERGUID_S_LLLIB_LeaderTrader_61ae5acc-1537-4970-82bb-d408a3334574);

*/

IF
CharacterUsedItem(_Char, ITEMGUID_LLLIB_DebugLever_TestRandom_d3152baa-c6d4-4e8e-a622-a6bb9c149b3e)
THEN
LeaderLog_SetOneshotTarget(_Char);
LeaderLog_Log("COMBAT", "[LLLIB:Debug] Testing the combat log!");
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LLLIB_09__Debug"
