Version 1
SubGoalCombiner SGC_AND
INITSECTION
//Settings
//DB_LLLIB_Requirements_PartyLevel(_RequirementID, _MinLevel, _MaxLevel, _StrictMode)
//DB_LLLIB_Requirements_Flag(_RequirementID, _Flag, _FlagType, _FlagVal)
//DB_LLLIB_Requirements_Region(_RequirementID, _Region)
//DB_LLLIB_Treasure_ItemMaxAmount(_TreasureID, _ItemEntry, _MaxAmount)

//Dynamic
//DB_LLLIB_Requirements_IsUnlocked(_RequirementID)
KBSECTION
//REGION UPDATING
PROC
LLLIB_System_UpdateDatabases()
THEN
LeaderLog_Log("DEBUG", "[LLLIB:Requirements] Databases updated.");

PROC
LLLIB_System_ClearDatabases()
THEN
SysClear("DB_LLLIB_Requirements_PartyLevel", 4);
SysClear("DB_LLLIB_Requirements_Flag", 4);
SysClear("DB_LLLIB_Treasure_ItemMaxAmount", 2);
SysClear("DB_LLLIB_Requirements_IsUnlocked", 1);
LeaderLog_Log("DEBUG", "[LLLIB:Requirements] Databases cleared.");

PROC
LLLIB_Updater_ResetDatabases()
THEN
LLLIB_System_ClearDatabases();
LLLIB_System_UpdateDatabases();
LeaderLog_Log("DEBUG", "[LLLIB:Requirements] Databases cleared and re-initialized.");
//END_REGION

//REGION REGISTERING
PROC
LLLIB_Requirements_AddFlagRequirement((STRING)_RequirementID, (STRING)_Flag, (STRING)_FlagType)
AND
_RequirementID != ""
THEN
LLLIB_Requirements_AddFlagRequirement(_RequirementID, _Flag, _FlagType, 1);

PROC
LLLIB_Requirements_AddFlagRequirement((STRING)_RequirementID, (STRING)_Flag, (STRING)_FlagType, (INTEGER)_FlagVal)
AND
_FlagType != "Character"
AND
_RequirementID != ""
THEN
DB_LLLIB_Requirements_Flag(_RequirementID, _Flag, _FlagType, _FlagVal);

PROC
LLLIB_Requirements_AddFlagRequirement((STRING)_RequirementID, (STRING)_Flag, "Character", (INTEGER)_FlagVal)
AND
_RequirementID != ""
THEN
DB_LLLIB_Requirements_Flag(_RequirementID, _Flag, "Object", _FlagVal);

PROC
LLLIB_Requirements_AddPartyLevelRequirement((STRING)_RequirementID, (INTEGER)_MinLevel, (INTEGER)_MaxLevel)
AND
_RequirementID != ""
THEN
LLLIB_Requirements_AddPartyLevelRequirement(_RequirementID, _MinLevel, _MaxLevel, 0);

PROC
LLLIB_Requirements_AddPartyLevelRequirement((STRING)_RequirementID, (INTEGER)_MinLevel, (INTEGER)_MaxLevel, (INTEGER)_StrictMode)
AND
_RequirementID != ""
THEN
DB_LLLIB_Requirements_PartyLevel(_RequirementID, _MinLevel, _MaxLevel, _StrictMode);

PROC
LLLIB_Requirements_AddRegionRequirement((STRING)_RequirementID, (STRING)_Region)
AND
_RequirementID != ""
THEN
DB_LLLIB_Requirements_Region(_RequirementID, _Region);
//END_REGION

//REGION REQUIREMENT_CHECK
QRY
LLLIB_QRY_Requirements_LevelMet((CHARACTERGUID)_Character, (INTEGER)_MinLevel, (INTEGER)_MaxLevel)
AND
CharacterGetLevel(_Character, _Level)
AND
_Level >= _MinLevel
AND
LLLIB_QRY_Requirements_Internal_MaxLevelCheck(_Level, _MaxLevel)
THEN
DB_NOOP(1);

QRY
LLLIB_QRY_Requirements_Internal_MaxLevelCheck((INTEGER)_Level, (INTEGER)_MaxLevel)
AND
_Level <= _MaxLevel
THEN
DB_NOOP(1);

QRY
LLLIB_QRY_Requirements_Internal_MaxLevelCheck((INTEGER)_Level, (INTEGER)_MaxLevel)
AND
_MaxLevel <= 0
THEN
DB_NOOP(1);

QRY
LLLIB_QRY_Requirements_PartyLevelMet((STRING)_RequirementID)
AND
DB_LLLIB_Requirements_PartyLevel(_RequirementID, _MinLevel, _MaxLevel, _StrictMode)
AND
_StrictMode <= 0
AND
LLLIB_Helper_QRY_PartyLevelRangeMet(_MinLevel, _MaxLevel)
THEN
DB_NOOP(1);

QRY
LLLIB_QRY_Requirements_PartyLevelMet((STRING)_RequirementID)
AND
DB_LLLIB_Requirements_PartyLevel(_RequirementID, _MinLevel, _MaxLevel, _StrictMode)
AND
_StrictMode >= 1
AND
LLLIB_Helper_QRY_PartyLevelRangeMet_Strict(_MinLevel, _MaxLevel)
THEN
DB_NOOP(1);

QRY
LLLIB_QRY_Requirements_PartyLevelMet((STRING)_RequirementID)
AND
NOT DB_LLLIB_Requirements_PartyLevel(_RequirementID, _, _, _)
THEN
DB_NOOP(1);

QRY
LLLIB_QRY_Requirements_PartyLevelMet((STRING)_RequirementID)
AND
_RequirementID == ""
THEN
DB_NOOP(1);

QRY
LLLIB_QRY_Requirements_PartyFlagMet((STRING)_RequirementID)
AND
DB_LLLIB_Requirements_Flag(_RequirementID, _Flag, _FlagType, _FlagVal)
AND
LLLIB_Helper_QRY_PartyFlagSet(_Flag, _FlagType, _FlagVal)
THEN
DB_NOOP(1);

QRY
LLLIB_QRY_Requirements_PartyFlagMet((STRING)_RequirementID)
AND
NOT DB_LLLIB_Requirements_Flag(_RequirementID,_,_,_)
THEN
DB_NOOP(1);

QRY
LLLIB_QRY_Requirements_PartyFlagMet((STRING)_RequirementID)
AND
_RequirementID == ""
THEN
DB_NOOP(1);

QRY
LLLIB_QRY_Requirements_RegionMet((STRING)_RequirementID)
AND
_RequirementID == ""
THEN
DB_NOOP(1);

QRY
LLLIB_QRY_Requirements_RegionMet((STRING)_RequirementID)
AND
NOT DB_LLLIB_Requirements_Region(_RequirementID, _)
THEN
DB_NOOP(1);

QRY
LLLIB_QRY_Requirements_RegionMet((STRING)_RequirementID)
AND
_RequirementID != ""
AND
DB_LLLIB_Requirements_Region(_RequirementID, _Region)
AND
DB_CurrentLevel(_Region)
THEN
DB_NOOP(1);

QRY
LLLIB_QRY_Requirements_AllMet((STRING)_RequirementID)
AND
_RequirementID == ""
THEN
DB_NOOP(1);

QRY
LLLIB_QRY_Requirements_AllMet((STRING)_RequirementID)
AND
_RequirementID != ""
AND
LLLIB_QRY_Requirements_PartyFlagMet(_RequirementID)
AND
LLLIB_QRY_Requirements_PartyLevelMet(_RequirementID)
AND
LLLIB_QRY_Requirements_RegionMet(_RequirementID)
THEN
DB_NOOP(1);
//END_REGION

//REGION LOCK_UNLOCK_PROC_EVENTS
PROC
LLLIB_Requirements_RequirementUnlocked((STRING)_RequirementID)
THEN
LeaderLog_Log("DEBUG", "[LLLIB:Requirements] Requirement [",_RequirementID,"] unlocked.");
DB_LLLIB_Requirements_IsUnlocked(_RequirementID);

PROC
LLLIB_Requirements_RequirementUnlocked((STRING)_RequirementID)
AND
_RequirementID != ""
AND
NOT DB_LLLIB_Requirements_JustUnlocked(_RequirementID)
AND
StringConcatenate("LLLIB_Timers_Requirements_RemoveJustUnlocked_", _RequirementID, _TimerName)
THEN
DB_LLLIB_Requirements_JustUnlocked(_RequirementID);
DB_LLLIB_Requirements_Temp_RemoveJustUnlocked(_TimerName, _RequirementID);
TimerLaunch(_TimerName, 1000);

IF
TimerFinished(_TimerName)
AND
DB_LLLIB_Requirements_Temp_RemoveJustUnlocked(_TimerName, _RequirementID)
THEN
NOT DB_LLLIB_Requirements_JustUnlocked(_RequirementID);
NOT DB_LLLIB_Requirements_Temp_RemoveJustUnlocked(_TimerName, _RequirementID);

PROC
LLLIB_Requirements_RequirementLocked((STRING)_RequirementID)
THEN
LeaderLog_Log("DEBUG", "[LLLIB:Requirements] Requirement [",_RequirementID,"] locked.");
NOT DB_LLLIB_Requirements_IsUnlocked(_RequirementID);
//END_REGION

//REGION FLAG_UNLOCKING
PROC
LLLIB_Requirements_Internal_OnFlagSet((STRING)_RequirementID, (INTEGER)_TargetVal, (INTEGER)_CurrentVal)
AND
_TargetVal != _CurrentVal
THEN
LLLIB_Requirements_RequirementLocked(_RequirementID);

PROC
LLLIB_Requirements_Internal_OnFlagSet((STRING)_RequirementID, (INTEGER)_TargetVal, (INTEGER)_CurrentVal)
AND
_TargetVal == _CurrentVal
THEN
LLLIB_Requirements_RequirementUnlocked(_RequirementID);

IF
ObjectFlagSet(_Flag, _Object, _)
AND
DB_LLLIB_Requirements_Flag(_RequirementID, _Flag, "Object", _TargetVal)
AND
LeaderLog_QRY_Log("DEBUG", "Locked: Test")
THEN
LLLIB_Requirements_Internal_OnFlagSet(_RequirementID, _TargetVal, 1);

IF
ObjectFlagCleared(_Flag, _Object, _)
AND
DB_LLLIB_Requirements_Flag(_RequirementID, _Flag, "Object", _TargetVal)
THEN
LLLIB_Requirements_Internal_OnFlagSet(_RequirementID, _TargetVal, 0);

IF
ObjectFlagSet(_Flag, (CHARACTERGUID)_Object, _)
AND
DB_LLLIB_Requirements_Flag(_RequirementID, _Flag, "User", _TargetVal)
THEN
LLLIB_Requirements_Internal_OnFlagSet(_RequirementID, _TargetVal, 1);

IF
ObjectFlagCleared(_Flag, (CHARACTERGUID)_Object, _)
AND
DB_LLLIB_Requirements_Flag(_RequirementID, _Flag, "User", _TargetVal)
THEN
LLLIB_Requirements_Internal_OnFlagSet(_RequirementID, _TargetVal, 0);

IF
GlobalFlagSet(_Flag)
AND
DB_LLLIB_Requirements_Flag(_RequirementID, _Flag, "Global", _TargetVal)
THEN
LLLIB_Requirements_Internal_OnFlagSet(_RequirementID, _TargetVal, 1);

IF
GlobalFlagCleared(_Flag)
AND
DB_LLLIB_Requirements_Flag(_RequirementID, _Flag, "Global", _TargetVal)
THEN
LLLIB_Requirements_Internal_OnFlagSet(_RequirementID, _TargetVal, 0);
//END_REGION

//REGION LEVEL_REQUIREMENT_UNLOCKED
IF
CharacterLeveledUp(_Player)
AND
CharacterIsPlayer(_Player, 1)
AND
DB_CurrentLevel(_Level)
AND
DB_LLLIB_Requirements_PartyLevel(_RequirementID, _MinLevel, _MaxLevel, _StrictMode)
AND
NOT DB_LLLIB_Requirements_IsUnlocked(_RequirementID)
AND
LLLIB_QRY_Requirements_LevelMet(_Player, _MinLevel, _MaxLevel)
AND
LLLIB_QRY_Requirements_PartyFlagMet(_RequirementID)
THEN
LLLIB_Requirements_RequirementUnlocked(_RequirementID);

IF
CharacterLeveledUp(_Player)
AND
CharacterIsPlayer(_Player, 1)
AND
DB_CurrentLevel(_Level)
AND
DB_LLLIB_Requirements_PartyLevel(_RequirementID, _MinLevel, _MaxLevel, _StrictMode)
AND
DB_LLLIB_Requirements_IsUnlocked(_RequirementID)
AND
_StrictMode > 0
AND
NOT LLLIB_QRY_Requirements_LevelMet(_Player, _MinLevel, _MaxLevel)
THEN
LLLIB_Requirements_RequirementLocked(_RequirementID);
//END_REGION

//REGION REGION_REQUIREMENT
IF
GameStarted(_Region, _)
AND
DB_LLLIB_Requirements_Region(_RequirementID, _Region)
AND
NOT DB_LLLIB_Requirements_IsUnlocked(_RequirementID)
THEN
LLLIB_Requirements_RequirementUnlocked(_RequirementID);

IF
GameStarted(_Level, _)
AND
DB_LLLIB_Requirements_Region(_RequirementID, _Region)
AND
_Level != _Region
AND
DB_LLLIB_Requirements_IsUnlocked(_RequirementID)
THEN
LLLIB_Requirements_RequirementLocked(_RequirementID);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader__LeaderLib"
