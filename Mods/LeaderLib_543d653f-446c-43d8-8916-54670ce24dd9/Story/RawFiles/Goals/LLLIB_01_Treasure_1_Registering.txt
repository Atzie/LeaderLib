Version 1
SubGoalCombiner SGC_AND
INITSECTION
//DB_LLLIB_Treasure_RegisteredObject(_TreasureID, _Object)
//DB_LLLIB_Treasure_RegisteredObjectTemplate(_TreasureID, _Template)
//DB_LLLIB_Treasure_RegisteredTrader(_TreasureID, _TraderID)
//DB_LLLIB_Treasure_RegisteredTreasureTable(_TreasureID, _TreasureTable, _RequirementID, _UsePartyLevel, _MinLevel, _MaxLevel)

//DB_LLLIB_Treasure_TreasureItemTemplates(_TreasureID, _ItemEntry, _Amount, _RequirementID)
//DB_LLLIB_Treasure_TreasureItemStats(_TreasureID, _ItemEntry, _Amount, _RequirementID)
//DB_LLLIB_Treasure_ItemGenerationSettings(_TreasureID, _ItemEntry, _MinLevel, _MaxLevel, _UsePartyLevel)
//DB_LLLIB_Treasure_ItemGenerationType(_TreasureID, _ItemEntry, _GenerationType)
//DB_LLLIB_Treasure_RegisteredGenerationTypes(_GenerationType)
//DB_LLLIB_Treasure_ItemGenerationFlag(_TreasureID, _ItemEntry, _Flag, _FlagType)
//DB_LLLIB_Treasure_ItemDeltaMods(_TreasureID, _ItemEntry, _Deltamod, _Chance)
//DB_LLLIB_Treasure_ItemRunes(_TreasureID, _ItemEntry, _Rune, _Chance)
//DB_LLLIB_Treasure_ItemMaxAmount(_TreasureID, _ItemEntry, _MaxAmount)

//DB_LLLIB_Treasure_OnlyOnce(_TreasureID, _ItemEntryOrTreasureTable, _OnCompletionEvent)
//DB_LLLIB_Treasure_GeneratedEvent(_TreasureID, _ItemEntry, _OnGeneratedEvent)
KBSECTION
//REGION REGISTERING
PROC
LLLIB_Treasure_Register_TreasureToObject((STRING)_TreasureID, (GUIDSTRING)_Object)
THEN
DB_LLLIB_Treasure_RegisteredObject(_TreasureID, _Object);

PROC
LLLIB_Treasure_Register_TreasureToTemplate((STRING)_TreasureID, (STRING)_ObjectTemplate)
THEN
DB_LLLIB_Treasure_RegisteredObjectTemplate(_TreasureID, _ObjectTemplate);

PROC
LLLIB_Treasure_Register_TreasureToTrader((STRING)_TreasureID, (STRING)_TraderID)
THEN
DB_LLLIB_Treasure_RegisteredTrader(_TreasureID, _TraderID);

PROC
LLLIB_Treasure_Register_TreasureTable((STRING)_TreasureID, (STRING)_TreaseTable, (STRING)_RequirementID)
THEN
DB_LLLIB_Treasure_RegisteredTreasureTable(_TreasureID, _TreaseTable, _RequirementID,1,1,1);

PROC
LLLIB_Treasure_Register_TreasureTable((STRING)_TreasureID, (STRING)_TreaseTable, (STRING)_RequirementID, (INTEGER)_UsePartyLevel)
THEN
DB_LLLIB_Treasure_RegisteredTreasureTable(_TreasureID, _TreaseTable, _RequirementID, _UsePartyLevel, 1, 1);

PROC
LLLIB_Treasure_Register_TreasureTable((STRING)_TreasureID, (STRING)_TreaseTable, (STRING)_RequirementID, (INTEGER)_UsePartyLevel, (INTEGER)_Level)
THEN
DB_LLLIB_Treasure_RegisteredTreasureTable(_TreasureID, _TreaseTable, _RequirementID, _UsePartyLevel, _Level, _Level);

PROC
LLLIB_Treasure_Register_TreasureTable((STRING)_TreasureID, (STRING)_TreaseTable, (STRING)_RequirementID, (INTEGER)_UsePartyLevel, (INTEGER)_MinLevel, (INTEGER)_MaxLevel)
THEN
DB_LLLIB_Treasure_RegisteredTreasureTable(_TreasureID, _TreaseTable, _RequirementID, _UsePartyLevel, _MinLevel, _MaxLevel);

PROC
LLLIB_Treasure_AddTreasureItemTemplate((STRING)_TreasureID, (STRING)_ItemEntry, (INTEGER)_Amount)
THEN
DB_LLLIB_Treasure_TreasureItemTemplates(_TreasureID, _ItemEntry, _Amount, "");

PROC
LLLIB_Treasure_AddTreasureItemTemplate((STRING)_TreasureID, (STRING)_ItemEntry, (INTEGER)_Amount, (STRING)_RequirementID)
THEN
DB_LLLIB_Treasure_TreasureItemTemplates(_TreasureID, _ItemEntry, _Amount, _RequirementID);

PROC
LLLIB_Treasure_AddTreasureItemStat((STRING)_TreasureID, (STRING)_ItemEntry, (INTEGER)_Amount)
THEN
DB_LLLIB_Treasure_TreasureItemStats(_TreasureID, _ItemEntry, _Amount, "");

PROC
LLLIB_Treasure_AddTreasureItemStat((STRING)_TreasureID, (STRING)_ItemEntry, (INTEGER)_Amount, (STRING)_RequirementID)
THEN
DB_LLLIB_Treasure_TreasureItemStats(_TreasureID, _ItemEntry, _Amount, _RequirementID);

/* Generation types:
MANUAL
TRADE_GENERATION_START
TRADE_GENERATION_END
TRADE_OPENED
DIALOG_STARTED
DIALOG_ENDED
FLAG
OPENED
LEVEL_LOADED
PARTY_LEVELED_UP
*/
PROC
LLLIB_Treasure_Configure_GenerationType((STRING)_TreasureID, (STRING)_ItemEntry, (STRING)_GenerationType)
AND
NOT DB_LLLIB_Treasure_ItemGenerationType(_TreasureID, _ItemEntry, _GenerationType)
THEN
DB_LLLIB_Treasure_ItemGenerationType(_TreasureID, _ItemEntry, _GenerationType);

PROC
LLLIB_Treasure_Configure_GenerationFlag((STRING)_TreasureID, (STRING)_ItemEntry, (STRING)_Flag, (STRING)_FlagType)
AND
NOT DB_LLLIB_Treasure_ItemGenerationFlag(_TreasureID, _ItemEntry, _Flag, _FlagType)
THEN
LLLIB_Treasure_Configure_GenerationType(_TreasureID, _ItemEntry, "FLAG");
DB_LLLIB_Treasure_ItemGenerationFlag(_TreasureID, _ItemEntry, _Flag, _FlagType);

PROC
LLLIB_Treasure_Configure_ItemLevel((STRING)_TreasureID, (STRING)_ItemEntry, (INTEGER)_UsePartyLevel)
THEN
LLLIB_Treasure_Configure_ItemLevel(_TreasureID, _ItemEntry, _UsePartyLevel, 1, 1);

PROC
LLLIB_Treasure_Configure_ItemLevel((STRING)_TreasureID, (STRING)_ItemEntry, (INTEGER)_UsePartyLevel, (INTEGER)_Level)
THEN
LLLIB_Treasure_Configure_ItemLevel(_TreasureID, _ItemEntry, _UsePartyLevel, _Level, _Level);

PROC
LLLIB_Treasure_Configure_ItemLevel((STRING)_TreasureID, (STRING)_ItemEntry, (INTEGER)_UsePartyLevel, (INTEGER)_MinLevel, (INTEGER)_MaxLevel)
AND
DB_LLLIB_Treasure_ItemGenerationSettings(_TreasureID, _ItemEntry, _PrevVal, _PrevMin, _PrevMax)
THEN
NOT DB_LLLIB_Treasure_ItemGenerationSettings(_TreasureID, _ItemEntry, _PrevVal, _PrevMin, _PrevMax);
DB_LLLIB_Treasure_ItemGenerationSettings(_TreasureID, _ItemEntry, _UsePartyLevel, _MinLevel, _MaxLevel);
//LeaderLog_Log("DEBUG", "[LLLIB:TreasureSystem] Previous settings for ",_TreasureID,":",_ItemEntry," were overwritten.");

PROC
LLLIB_Treasure_Configure_ItemLevel((STRING)_TreasureID, (STRING)_ItemEntry, (INTEGER)_UsePartyLevel, (INTEGER)_MinLevel, (INTEGER)_MaxLevel)
AND
NOT DB_LLLIB_Treasure_ItemGenerationSettings(_TreasureID, _ItemEntry,_,_,_)
THEN
DB_LLLIB_Treasure_ItemGenerationSettings(_TreasureID, _ItemEntry, _UsePartyLevel, _MinLevel, _MaxLevel);

PROC
LLLIB_Treasure_Configure_AddDeltaMod((STRING)_TreasureID, (STRING)_ItemEntry, (STRING)_Deltamod, (INTEGER)_Chance)
THEN
DB_LLLIB_Treasure_ItemDeltaMods(_TreasureID, _ItemEntry, _Deltamod, _Chance);

PROC
LLLIB_Treasure_Configure_AddRune((STRING)_TreasureID, (STRING)_ItemEntry, (STRING)_Rune, (INTEGER)_Chance)
THEN
DB_LLLIB_Treasure_ItemRunes(_TreasureID, _ItemEntry, _Rune, _Chance);

PROC
LLLIB_Treasure_Configure_AddMaxAmount((STRING)_TreasureID, (STRING)_ItemEntry, (INTEGER)_MaxAmount)
THEN
DB_LLLIB_Treasure_ItemMaxAmount(_TreasureID, _ItemEntry, _MaxAmount);

PROC
LLLIB_Treasure_AddGenerationEvent((STRING)_TreasureID, (STRING)_ItemEntry, (STRING)_OnGeneratedEvent)
THEN
DB_LLLIB_Treasure_GeneratedEvent(_TreasureID, _ItemEntry, _OnGeneratedEvent);

PROC
LLLIB_Treasure_Configure_GenerateOnce((STRING)_TreasureID, (STRING)_ItemEntry, (STRING)_OnCompletionEvent)
THEN
DB_LLLIB_Treasure_OnlyOnce(_TreasureID, _ItemEntry, _OnCompletionEvent);
//END_REGION

//REGION INTERNAL_REGISTERING
PROC
LLLIB_Treasure_Configure_GenerationType((STRING)_TreasureID, (STRING)_ItemEntry, (STRING)_GenerationType)
AND
NOT DB_LLLIB_Treasure_RegisteredGenerationTypes(_GenerationType)
THEN
DB_LLLIB_Treasure_RegisteredGenerationTypes(_GenerationType);
//END_REGION

//REGION CLEARING_TREASURE
PROC
LLLIB_Treasure_ClearAllEntriesForTreasure((STRING)_TreasureID)
AND
DB_LLLIB_Treasure_RegisteredObject(_TreasureID, _Object)
THEN
NOT DB_LLLIB_Treasure_RegisteredObject(_TreasureID, _Object);

PROC
LLLIB_Treasure_ClearAllEntriesForTreasure((STRING)_TreasureID)
AND
DB_LLLIB_Treasure_RegisteredObjectTemplate(_TreasureID, _Template)
THEN
NOT DB_LLLIB_Treasure_RegisteredObjectTemplate(_TreasureID, _Template);

PROC
LLLIB_Treasure_ClearAllEntriesForTreasure((STRING)_TreasureID)
AND
DB_LLLIB_Treasure_RegisteredTrader(_TreasureID, _TraderID)
THEN
NOT DB_LLLIB_Treasure_RegisteredTrader(_TreasureID, _TraderID);

PROC
LLLIB_Treasure_ClearAllEntriesForTreasure((STRING)_TreasureID)
AND
DB_LLLIB_Treasure_RegisteredTreasureTable(_TreasureID, _TreasureTable, _RequirementID, _UsePartyLevel, _MinLevel, _MaxLevel)
THEN
NOT DB_LLLIB_Treasure_RegisteredTreasureTable(_TreasureID, _TreasureTable, _RequirementID, _UsePartyLevel, _MinLevel, _MaxLevel);

PROC
LLLIB_Treasure_ClearAllEntriesForTreasure((STRING)_TreasureID)
THEN
LLLIB_Treasure_ClearAllItemsForTreasure(_TreasureID);
LLLIB_Treasure_RebuildRegisteredGenerationTypes();

PROC
LLLIB_Treasure_ClearAllItemsForTreasure((STRING)_TreasureID)
AND
DB_LLLIB_Treasure_TreasureItemTemplates(_TreasureID, _ItemEntry, _Amount, _RequirementID)
THEN
NOT DB_LLLIB_Treasure_TreasureItemTemplates(_TreasureID, _ItemEntry, _Amount, _RequirementID);

PROC
LLLIB_Treasure_ClearAllItemsForTreasure((STRING)_TreasureID)
AND
DB_LLLIB_Treasure_TreasureItemStats(_TreasureID, _ItemEntry, _Amount, _RequirementID)
THEN
NOT DB_LLLIB_Treasure_TreasureItemStats(_TreasureID, _ItemEntry, _Amount, _RequirementID);

PROC
LLLIB_Treasure_ClearAllItemsForTreasure((STRING)_TreasureID)
AND
DB_LLLIB_Treasure_ItemGenerationSettings(_TreasureID, _ItemEntry, _MinLevel, _MaxLevel, _UsePartyLevel)
THEN
NOT DB_LLLIB_Treasure_ItemGenerationSettings(_TreasureID, _ItemEntry, _MinLevel, _MaxLevel, _UsePartyLevel);

PROC
LLLIB_Treasure_ClearAllItemsForTreasure((STRING)_TreasureID)
AND
DB_LLLIB_Treasure_ItemGenerationType(_TreasureID, _ItemEntry, _GenerationType)
THEN
NOT DB_LLLIB_Treasure_ItemGenerationType(_TreasureID, _ItemEntry, _GenerationType);

PROC
LLLIB_Treasure_ClearAllItemsForTreasure((STRING)_TreasureID)
AND
DB_LLLIB_Treasure_ItemGenerationFlag(_TreasureID, _ItemEntry, _Flag, _FlagType)
THEN
NOT DB_LLLIB_Treasure_ItemGenerationFlag(_TreasureID, _ItemEntry, _Flag, _FlagType);

PROC
LLLIB_Treasure_ClearAllItemsForTreasure((STRING)_TreasureID)
AND
DB_LLLIB_Treasure_ItemDeltaMods(_TreasureID, _ItemEntry, _Deltamod, _Chance)
THEN
NOT DB_LLLIB_Treasure_ItemDeltaMods(_TreasureID, _ItemEntry, _Deltamod, _Chance);

PROC
LLLIB_Treasure_ClearAllItemsForTreasure((STRING)_TreasureID)
AND
DB_LLLIB_Treasure_ItemRunes(_TreasureID, _ItemEntry, _Rune, _Chance)
THEN
NOT DB_LLLIB_Treasure_ItemRunes(_TreasureID, _ItemEntry, _Rune, _Chance);

PROC
LLLIB_Treasure_ClearAllItemsForTreasure((STRING)_TreasureID)
AND
DB_LLLIB_Treasure_OnlyOnce(_TreasureID, _ItemEntryOrTreasureTable, _OnCompletionEvent)
THEN
NOT DB_LLLIB_Treasure_OnlyOnce(_TreasureID, _ItemEntryOrTreasureTable, _OnCompletionEvent);

PROC
LLLIB_Treasure_ClearAllItemsForTreasure((STRING)_TreasureID)
AND
DB_LLLIB_Treasure_GeneratedEvent(_TreasureID, _ItemEntry, _OnGeneratedEvent)
THEN
NOT DB_LLLIB_Treasure_GeneratedEvent(_TreasureID, _ItemEntry, _OnGeneratedEvent);
//END_REGION

//REGION MISC
PROC
LLLIB_Treasure_RebuildRegisteredGenerationTypes()
THEN
SysClear("DB_LLLIB_Treasure_RegisteredGenerationTypes", 1);

PROC
LLLIB_Treasure_RebuildRegisteredGenerationTypes()
AND
DB_LLLIB_Treasure_ItemGenerationType(_TreasureID, _ItemEntry, _GenerationType)
AND
NOT DB_LLLIB_Treasure_RegisteredGenerationTypes(_GenerationType)
THEN
DB_LLLIB_Treasure_RegisteredGenerationTypes(_GenerationType);
//END_REGION

//REGION UPDATER
PROC
LLLIB_System_UpdateDatabases()
THEN
DB_NOOP(1);

PROC
LLLIB_System_RegisterDatabases()
THEN
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Treasure_Registering", "DB_LLLIB_Treasure_RegisteredObject", 2);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Treasure_Registering", "DB_LLLIB_Treasure_RegisteredObjectTemplate", 2);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Treasure_Registering", "DB_LLLIB_Treasure_RegisteredTrader", 2);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Treasure_Registering", "DB_LLLIB_Treasure_RegisteredTreasureTable", 2);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Treasure_Registering", "DB_LLLIB_Treasure_RegisteredTreasureTable", 6);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Treasure_Registering", "DB_LLLIB_Treasure_TreasureItemTemplates", 4);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Treasure_Registering", "DB_LLLIB_Treasure_TreasureItemStats", 4);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Treasure_Registering", "DB_LLLIB_Treasure_ItemGenerationSettings", 5);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Treasure_Registering", "DB_LLLIB_Treasure_ItemGenerationType", 3);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Treasure_Registering", "DB_LLLIB_Treasure_RegisteredGenerationTypes", 1);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Treasure_Registering", "DB_LLLIB_Treasure_ItemGenerationFlag", 4);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Treasure_Registering", "DB_LLLIB_Treasure_ItemDeltaMods", 4);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Treasure_Registering", "DB_LLLIB_Treasure_ItemRunes", 4);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Treasure_Registering", "DB_LLLIB_Treasure_ItemMaxAmount", 3);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Treasure_Registering", "DB_LLLIB_Treasure_OnlyOnce", 3);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Treasure_Registering", "DB_LLLIB_Treasure_GeneratedEvent", 3);
LeaderLog_Log("DEBUG", "[LLLIB:Treasure_Registering] Databases registered.");
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader__LeaderLib"
