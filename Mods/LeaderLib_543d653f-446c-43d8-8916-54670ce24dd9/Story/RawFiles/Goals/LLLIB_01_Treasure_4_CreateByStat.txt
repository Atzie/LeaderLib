Version 1
SubGoalCombiner SGC_AND
INITSECTION
//DB_LLLIB_Treasures_Temp_CreateItemByStat_CharacterArray(_Character, _ArrayName)
//DB_LLLIB_Treasures_Temp_CreateItemByStat_ItemQueue(_Character, _ArrayName, _Stat, _Equip, _ShowInTrade)
//DB_LLLIB_Treasure_Temp_CreateItemByStat_QueueTimer(_Character, _TimerName)
//DB_LLLIB_Treasure_Temp_CreateItemByStat_TimeoutTimer(_Character, _TimerName)
KBSECTION
//REGION ITEM_SPAWNING
PROC
LLLIB_Treasure_CreateItemByStat_AddToQueue((CHARACTERGUID)_Character, (STRING)_Stat)
THEN
LLLIB_Treasure_CreateItemByStat_AddToQueue(_Character, _Stat, 0, 1);

PROC
LLLIB_Treasure_CreateItemByStat_AddToQueue((CHARACTERGUID)_Character, (STRING)_Stat, (INTEGER)_Equip)
THEN
LLLIB_Treasure_CreateItemByStat_AddToQueue(_Character, _Stat, _Equip, 1);

PROC
LLLIB_Treasure_CreateItemByStat_AddToQueue((CHARACTERGUID)_Character, (STRING)_Stat, (INTEGER)_Equip, (INTEGER)_ShowInTrade)
AND
NOT DB_LLLIB_Treasures_Temp_CreateItemByStat_ItemQueue(_Character, _, _Stat, _, _)
AND
GetUUID(_Character, _ID)
AND
StringConcatenate("LLLIB_Treasure_CreateByStat_", _ID, _ArrayName)
THEN
DB_LLLIB_Treasures_Temp_CreateItemByStat_CharacterArray(_Character, _ArrayName);
LeaderLog_Log("DEBUG", "[LLLIB:Treasures:CreateItemByStat] Attempting to generate item by stat [",_Stat,"] and equip it when it's added.");
DB_LLLIB_Treasures_Temp_CreateItemByStat_ItemQueue(_Character, _ArrayName, _Stat, _Equip, _ShowInTrade);
LLLIB_Array_AddToArray(_ArrayName, _Stat);

PROC
LLLIB_Treasure_CreateItemByStat_Start((CHARACTERGUID)_Character, (INTEGER)_TickRate)
AND
NOT DB_LLLIB_Treasure_Temp_CreateItemByStat_QueueTimer(_Character, _, _)
AND
GetUUID(_Character, _ID)
AND
StringConcatenate("LLLIB_Timers_Treasure_CreateByStat_", _ID, _TimerName)
THEN
DB_LLLIB_Treasure_Temp_CreateItemByStat_QueueTimer(_Character, _TimerName, _TickRate);
LLLIB_Treasure_CreateItemByStat_Internal_CreateNextStatItem(_Character);

QRY
LLLIB_Treasure_CreateItemByStat_QRY_JobDone((CHARACTERGUID)_Character)
AND
NOT DB_LLLIB_Treasures_Temp_CreateItemByStat_ItemQueue(_Character, _, _, _, _)
THEN
DB_NOOP(1);

PROC
LLLIB_Treasure_CreateItemByStat_Cleanup((CHARACTERGUID)_Character)
AND
GetUUID(_Character, _ID)
AND
StringConcatenate("LLLIB_Treasure_CreateByStat_", _ID, _ArrayName)
THEN
LLLIB_Array_ClearArray(_ArrayName);

PROC
LLLIB_Treasure_CreateItemByStat_Internal_StartNextTick((CHARACTERGUID)_Character)
AND
NOT LLLIB_Treasure_CreateItemByStat_QRY_JobDone(_Character)
AND
DB_LLLIB_Treasure_Temp_CreateItemByStat_QueueTimer(_Character, _TimerName, _TickRate)
THEN
TimerLaunch(_TimerName, _TickRate);

IF
TimerFinished(_TimerName)
AND
DB_LLLIB_Treasure_Temp_CreateItemByStat_QueueTimer(_Character, _TimerName, _TickRate)
THEN
LLLIB_Treasure_CreateItemByStat_Internal_CreateNextStatItem(_Character);

PROC
LLLIB_Treasure_CreateItemByStat_Internal_CreateNextStatItem((CHARACTERGUID)_Character)
AND
DB_LLLIB_Treasures_Temp_CreateItemByStat_CharacterArray(_Character, _ArrayName)
AND
DB_LLLIB_Array_Data(_ArrayName, 0, _Stat)
AND
DB_LLLIB_Treasures_Temp_CreateItemByStat_ItemQueue(_Character, _ArrayName, _Stat, _Equip, _ShowInTrade)
AND
LLLIB_QRY_Treasure_PrepareGeneratorDummy(_ArrayName)
AND
DB_LLLIB_Treasure_NextGeneratorDummy(_Dummy, _ArrayName)
THEN
LeaderLog_Log("DEBUG", "[LLLIB:Treasures:CreateItemByStat] Creating [",_Stat,"] on dummy.");
DB_LLLIB_Treasures_Temp_CreateItemByStat_DummyTarget(_Character, _Dummy, _Stat);
NOT DB_LLLIB_Array_Data(_ArrayName, 0, _Stat);
LLLIB_Array_ShiftArrayUp(_ArrayName, 0);
SetVarFixedString(_Dummy, "LLLIB_Treasures_NextCreatedEquipmentStat", _Stat);
SetVarInteger(_Dummy, "LLLIB_Treasures_ShowNextItemInTrade", _ShowInTrade);
LLLIB_Treasure_CreateItemByStat_Internal_StartTimeoutTimer(_Character);
SetStoryEvent(_Dummy, "LLLIB_Events_CreateEquipmentByStat");

IF
ItemAddedToCharacter(_Item, _Dummy)
AND
ObjectGetFlag(_Dummy, "LLLIB_GeneratorDummy_CreatedEquipmentItem", 1)
AND
DB_LLLIB_Treasures_Temp_CreateItemByStat_DummyTarget(_Character, _Dummy, _Stat)
AND
GetTemplate(_Item, _ItemTemplate)
THEN
NOT DB_LLLIB_Treasures_Temp_CreateItemByStat_DummyTarget(_Character, _Dummy, _Stat);
ObjectClearFlag(_Dummy, "LLLIB_GeneratorDummy_CreatedEquipmentItem");
LLLIB_Treasure_CreateItemByStat_Internal_CancelTimeoutTimer(_Character);
LeaderLog_Log("DEBUG", "[LLLIB:Treasures:CreateItemByStat] Equipping [",_ItemTemplate,"]");
SetVarFixedString(_Item, "LLLIB_GeneratedItemStat", _Stat);
DB_LLLIB_Treasure_StatToTemplate(_Stat, _ItemTemplate);
ItemToInventory(_Item, _Character, 1, 0, 1);
LLLIB_Treasure_CreateItemByStat_Internal_EquipCreatedStatItem(_Character, _Item, _Stat);
LLLIB_Treasure_CreateItemByStat_Internal_ClearFromQueue(_Character, _Stat);
LLLIB_Treasure_CreateItemByStat_Internal_StartNextTick(_Character);

PROC
LLLIB_Treasure_CreateItemByStat_Internal_ClearFromQueue((CHARACTERGUID)_Character, (STRING)_Stat)
AND
DB_LLLIB_Treasures_Temp_CreateItemByStat_ItemQueue(_Character, _ArrayName, _Stat, _Equip, _ShowInTrade)
THEN
NOT DB_LLLIB_Treasures_Temp_CreateItemByStat_ItemQueue(_Character, _ArrayName, _Stat, _Equip, _ShowInTrade);

PROC
LLLIB_Treasure_CreateItemByStat_Internal_EquipCreatedStatItem((CHARACTERGUID)_Character, (ITEMGUID)_Item, (STRING)_Stat)
AND
DB_LLLIB_Treasures_Temp_CreateItemByStat_ItemQueue(_Character, _ArrayName, _Stat, _Equip, _ShowInTrade)
AND
_Equip > 0
THEN
CharacterEquipItem(_Character, _Item);

PROC
LLLIB_Treasure_CreateItemByStat_Internal_CancelTimeoutTimer((CHARACTERGUID)_Character)
AND
DB_LLLIB_Treasure_Temp_CreateItemByStat_TimeoutTimer(_Character, _TimerName)
THEN
TimerCancel(_TimerName);

PROC
LLLIB_Treasure_CreateItemByStat_Internal_StartTimeoutTimer((CHARACTERGUID)_Character)
AND
NOT DB_LLLIB_Treasure_Temp_CreateItemByStat_TimeoutTimer(_Character, _)
AND
GetUUID(_Character, _ID)
AND
StringConcatenate("LLLIB_Timers_Treasure_CreateByStat_Timeout_", _ID, _TimerName)
THEN
DB_LLLIB_Treasure_Temp_CreateItemByStat_TimeoutTimer(_Character, _TimerName);

PROC
LLLIB_Treasure_CreateItemByStat_Internal_StartTimeoutTimer((CHARACTERGUID)_Character)
AND
DB_LLLIB_Treasure_Temp_CreateItemByStat_TimeoutTimer(_Character, _TimerName)
THEN
TimerCancel(_TimerName);
TimerLaunch(_TimerName, 500);

IF
TimerFinished(_TimerName)
AND
DB_LLLIB_Treasure_Temp_CreateItemByStat_TimeoutTimer(_Character, _TimerName)
THEN
NOT DB_LLLIB_Treasure_Temp_CreateItemByStat_TimeoutTimer(_Character, _TimerName);
LeaderLog_Log("DEBUG", "[LLLIB:Treasures:CreateItemByStat] Failed to create item (timeout timer finished). Starting next tick.");
LLLIB_Treasure_CreateItemByStat_Internal_StartNextTick(_Character);

PROC
LLLIB_Treasure_CreateItemByStat_Internal_StartNextTick((CHARACTERGUID)_Character)
AND
LLLIB_Treasure_CreateItemByStat_QRY_JobDone(_Character)
AND
DB_LLLIB_Treasures_Temp_CreateItemByStat_CharacterArray(_Character, _ArrayName)
THEN
LeaderLog_Log("DEBUG", "[LLLIB:Treasures:CreateItemByStat] Job finished. Cleaning up databases.");
LLLIB_Array_ClearArray(_ArrayName);
NOT DB_LLLIB_Treasures_Temp_CreateItemByStat_CharacterArray(_Character, _ArrayName);
LLLIB_Treasure_CreateItemByStat_Cleanup(_Character);

PROC
LLLIB_Treasure_CreateItemByStat_Cleanup((CHARACTERGUID)_Character)
AND
DB_LLLIB_Treasures_Temp_CreateItemByStat_ItemQueue(_Character, _ArrayName, _Stat, _Equip, _ShowInTrade)
AND
DB_LLLIB_Treasure_NextGeneratorDummy(_Dummy, _ArrayName)
THEN
LLLIB_Treasure_ResetDummy(_Dummy);

PROC
LLLIB_Treasure_CreateItemByStat_Cleanup((CHARACTERGUID)_Character)
AND
DB_LLLIB_Treasures_Temp_CreateItemByStat_ItemQueue(_Character, _ArrayName, _Stat, _Equip, _ShowInTrade)
THEN
NOT DB_LLLIB_Treasures_Temp_CreateItemByStat_ItemQueue(_Character, _ArrayName, _Stat, _Equip, _ShowInTrade);

PROC
LLLIB_Treasure_CreateItemByStat_Cleanup((CHARACTERGUID)_Character)
AND
DB_LLLIB_Treasure_Temp_CreateItemByStat_QueueTimer(_Character, _TimerName)
THEN
TimerCancel(_TimerName);
NOT DB_LLLIB_Treasure_Temp_CreateItemByStat_QueueTimer(_Character, _TimerName);

PROC
LLLIB_Treasure_CreateItemByStat_Cleanup((CHARACTERGUID)_Character)
AND
DB_LLLIB_Treasure_Temp_CreateItemByStat_TimeoutTimer(_Character, _TimerName)
THEN
TimerCancel(_TimerName);
NOT DB_LLLIB_Treasure_Temp_CreateItemByStat_TimeoutTimer(_Character, _TimerName);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader__LeaderLib"
