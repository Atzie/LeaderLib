Version 1
SubGoalCombiner SGC_AND
INITSECTION
//DB_LLLIB_Treasure_Temp_ItemTemplateAmount(_Object, _TreasureID, _ItemTemplate, _Amount)
//DB_LLLIB_Treasure_Temp_ItemStatAmount(_Object, _TreasureID, _ItemTemplate, _GeneratedStat, _Amount)
KBSECTION
//REGION COUNTING
QRY
LLLIB_QRY_Treasure_CountTemplate((STRING)_ID, (GUIDSTRING)_Object, (STRING)_TreasureID, (STRING)_ItemTemplate)
THEN
DB_LLLIB_Treasure_Temp_ItemTemplateAmount((GUIDSTRING)_Object, _TreasureID, _ItemTemplate, 0);

QRY
LLLIB_QRY_Treasure_CountTemplate((STRING)_ID, (GUIDSTRING)_Object, (STRING)_TreasureID, (STRING)_ItemTemplate)
AND
ObjectIsCharacter(_Object, 1)
AND
ItemTemplateIsInCharacterInventory((CHARACTERGUID)_Object, _ItemTemplate, _Amount)
THEN
NOT DB_LLLIB_Treasure_Temp_ItemTemplateAmount((GUIDSTRING)_Object, _TreasureID, _ItemTemplate, 0);
DB_LLLIB_Treasure_Temp_ItemTemplateAmount((GUIDSTRING)_Object, _TreasureID, _ItemTemplate, _Amount);

QRY
LLLIB_QRY_Treasure_CountTemplate((STRING)_ID, (GUIDSTRING)_Object, (STRING)_TreasureID, (STRING)_ItemTemplate)
AND
ObjectIsItem(_Object, 1)
AND
ItemIsContainer((ITEMGUID)_Object, 1)
AND
ItemTemplateIsInContainer(_Object, _ItemTemplate, _Amount)
THEN
NOT DB_LLLIB_Treasure_Temp_ItemTemplateAmount((GUIDSTRING)_Object, _TreasureID, _ItemTemplate, 0);
DB_LLLIB_Treasure_Temp_ItemTemplateAmount((GUIDSTRING)_Object, _TreasureID, _ItemTemplate, _Amount);

QRY
LLLIB_QRY_Treasure_CountTemplateWithStat((STRING)_ID, (GUIDSTRING)_Object, (STRING)_TreasureID, (STRING)_ItemTemplate, (STRING)_GeneratedStat)
THEN
DB_LLLIB_Treasure_Temp_ItemStatAmount((GUIDSTRING)_Object, _TreasureID, _ItemTemplate, _GeneratedStat, 0);

QRY
LLLIB_QRY_Treasure_CountTemplateWithStat((STRING)_ID, (GUIDSTRING)_Object, (STRING)_TreasureID, (STRING)_ItemTemplate, (STRING)_GeneratedStat)
AND
ObjectIsCharacter(_Object, 1)
AND
GetItemForItemTemplateInInventory((CHARACTERGUID)_Object, _ItemTemplate, _Item)
AND
GetVarFixedString(_Item, "LeaderLib_GeneratedItemStat", _GeneratedStat)
AND
ItemGetAmount(_Item, _Amount)
THEN
NOT DB_LLLIB_Treasure_Temp_ItemStatAmount((GUIDSTRING)_Object, _TreasureID, _ItemTemplate, _GeneratedStat, 0);
DB_LLLIB_Treasure_Temp_ItemStatAmount((GUIDSTRING)_Object, _TreasureID, _ItemTemplate, _GeneratedStat, _Amount);
LeaderLog_Log("DEBUG", "[LLLIB:Treasure:CountTemplateWithStat] Found item template with stat on character. [",_TreasureID,"]:[",_GeneratedStat,"]:[",_ItemTemplate,"].");

QRY
LLLIB_QRY_Treasure_CountTemplateWithStat((STRING)_ID, (GUIDSTRING)_Object, (STRING)_TreasureID, (STRING)_ItemTemplate, (STRING)_GeneratedStat)
AND
ObjectIsItem(_Object, 1)
AND
ItemIsContainer((ITEMGUID)_Object, 1)
AND
ItemTemplateIsInContainer(_Object, _ItemTemplate, _Amount)
AND
_Amount > 0
AND
LLLIB_QRY_Treasure_PrepareGeneratorDummy((GUIDSTRING)_Object, _ID)
AND
DB_LLLIB_Treasure_NextGeneratorDummy(_Dummy, _ID)
THEN
LeaderLog_Log("DEBUG", "[LLLIB:Treasure:CountTemplateWithStat] Moved all items to dummy for counting. [",_TreasureID,"]:[",_GeneratedStat,"].");
MoveAllItemsTo(_Object, _Dummy);
LLLIB_Treasure_Internal_CountItemsOnDummy(_ID, _Dummy, _Object, _TreasureID, _ItemTemplate, _GeneratedStat);

//Move the items to a dummy character so we can actually get the item by the item template
PROC
LLLIB_Treasure_Internal_CountItemsOnDummy((STRING)_ID, (GUIDSTRING)_Dummy, (GUIDSTRING)_Object, (STRING)_TreasureID, (STRING)_ItemTemplate, (STRING)_GeneratedStat)
AND
LLLIB_QRY_Treasure_CountTemplateWithStat(_ID, _Dummy, _TreasureID, _ItemTemplate, _GeneratedStat)
AND
DB_LLLIB_Treasure_Temp_ItemStatAmount(_Dummy, _TreasureID, _ItemTemplate, _GeneratedStat, _Amount)
THEN
NOT DB_LLLIB_Treasure_Temp_ItemStatAmount(_Dummy, _TreasureID, _ItemTemplate, _GeneratedStat, _Amount);
DB_LLLIB_Treasure_Temp_ItemStatAmount((GUIDSTRING)_Object, _TreasureID, _ItemTemplate, _GeneratedStat, _Amount);
MoveAllItemsTo(_Dummy, _Object);
LeaderLog_Log("DEBUG", "[LLLIB:Treasure:CountTemplateWithStat] Counting finished. Moved items from dummy to object. [",_TreasureID,"]:[",_GeneratedStat,"].");
//END_REGION

//REGION QUERIES
QRY
LLLIB_QRY_Treasure_SkipAmountCheck((GUIDSTRING)_Object, (STRING)_TreasureID, (STRING)_ItemEntry)
AND
IsTagged(_Object, "LLLIB_Treasure_NoAmountLimit", 1)
THEN
DB_NOOP(1);

QRY
LLLIB_QRY_Treasure_SkipAmountCheck((GUIDSTRING)_Object, (STRING)_TreasureID, (STRING)_ItemEntry)
AND
IsTagged(_Object, "LLLIB_Treasure_NoAmountLimit", 0)
AND
NOT DB_LLLIB_Treasure_ItemDoneGenerating(_TreasureID, _ItemEntry)
THEN
DB_NOOP(1);

QRY
LLLIB_QRY_Treasure_ItemLimitNotMet((GUIDSTRING)_Object, (STRING)_TreasureID, (STRING)_ItemEntry, (STRING)_RequirementID, (INTEGER)_GeneratedAmount, (INTEGER)_CurrentAmount)
AND
_RequirementID != ""
AND
DB_LLLIB_Treasure_ItemMaxAmount(_TreasureID, _ItemEntry, _MaxAmount)
AND
_CurrentAmount < _MaxAmount
AND
IntegerSubtract(_GeneratedAmount, _MaxAmount, _AmountToCreate)
THEN
DB_LLLIB_Treasure_Temp_AmountToCreate(_Object, _ItemEntry, _AmountToCreate);

QRY
LLLIB_QRY_Treasure_ItemLimitNotMet((GUIDSTRING)_Object, (STRING)_TreasureID, (STRING)_ItemEntry, (STRING)_RequirementID, (INTEGER)_GeneratedAmount, (INTEGER)_CurrentAmount)
AND
_RequirementID != ""
AND
NOT DB_LLLIB_Treasure_ItemMaxAmount(_TreasureID, _ItemEntry, _)
AND
_CurrentAmount < _GeneratedAmount
AND
IntegerSubtract(_GeneratedAmount, _CurrentAmount, _AmountToCreate)
THEN
DB_LLLIB_Treasure_Temp_AmountToCreate(_Object, _ItemEntry, _AmountToCreate);

QRY
LLLIB_QRY_Treasure_ItemLimitNotMet((GUIDSTRING)_Object, (STRING)_TreasureID, (STRING)_ItemEntry, (STRING)_RequirementID, (INTEGER)_GeneratedAmount, (INTEGER)_CurrentAmount)
AND
_RequirementID == ""
AND
_CurrentAmount < _GeneratedAmount
AND
IntegerSubtract(_GeneratedAmount, _CurrentAmount, _AmountToCreate)
THEN
DB_LLLIB_Treasure_Temp_AmountToCreate(_Object, _ItemEntry, _AmountToCreate);

QRY
LLLIB_QRY_Treasure_CountedItems((GUIDSTRING)_Object, (STRING)_TreasureID, (STRING)_ItemEntry)
AND
DB_LLLIB_Treasure_Temp_ItemTemplateAmount(_Object, _TreasureID, _ItemEntry,_)
THEN
DB_NOOP(1);

QRY
LLLIB_QRY_Treasure_CountedItems((GUIDSTRING)_Object, (STRING)_TreasureID, (STRING)_ItemEntry)
AND
DB_LLLIB_Treasure_Temp_ItemStatAmount(_Object, _TreasureID, _, _ItemEntry, _)
THEN
DB_NOOP(1);
//END_REGION

//REGION UPDATER
PROC
LLLIB_System_RegisterDatabases()
THEN
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Treasure_ItemCounter", "DB_LLLIB_Treasure_Temp_ItemTemplateAmount", 4);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Treasure_ItemCounter", "DB_LLLIB_Treasure_Temp_ItemStatAmount", 5);
LeaderLog_Log("SYSTEM", "[LLLIB:Treasure_ItemCounter] Databases registered.");
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader__LeaderLib"
